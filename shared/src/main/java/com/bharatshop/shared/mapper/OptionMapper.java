package com.bharatshop.shared.mapper;

import com.bharatshop.shared.dto.OptionDto;
import com.bharatshop.shared.entity.Option;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.MappingTarget;
import org.mapstruct.NullValuePropertyMappingStrategy;

import java.util.List;

/**
 * MapStruct mapper for Option entity and DTOs.
 * Provides type-safe mapping between domain objects and DTOs.
 */
@Mapper(
    componentModel = "spring",
    nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE,
    uses = {OptionValueMapper.class}
)
public interface OptionMapper {
    
    /**
     * Maps Option entity to OptionDto.
     */
    @Mapping(target = "optionValues", ignore = true) // Mapped separately to avoid circular references
    @Mapping(target = "productCount", ignore = true) // Computed field
    OptionDto toDto(Option option);
    
    /**
     * Maps OptionDto to Option entity.
     */
    @Mapping(target = "id", ignore = true) // Generated by database
    @Mapping(target = "tenantId", ignore = true) // Set by service
    @Mapping(target = "createdAt", ignore = true) // Set by auditing
    @Mapping(target = "updatedAt", ignore = true) // Set by auditing
    @Mapping(target = "deletedAt", ignore = true) // Set by soft delete
    @Mapping(target = "optionValues", ignore = true) // Handled separately
    Option toEntity(OptionDto optionDto);
    
    /**
     * Updates existing Option entity with OptionDto data.
     */
    @Mapping(target = "id", ignore = true)
    @Mapping(target = "tenantId", ignore = true)
    @Mapping(target = "createdAt", ignore = true)
    @Mapping(target = "updatedAt", ignore = true)
    @Mapping(target = "deletedAt", ignore = true)
    @Mapping(target = "optionValues", ignore = true)
    void updateEntity(OptionDto optionDto, @MappingTarget Option option);
    
    /**
     * Maps list of Option entities to list of OptionDtos.
     */
    List<OptionDto> toDtoList(List<Option> options);
    
    /**
     * Maps list of OptionDtos to list of Option entities.
     */
    List<Option> toEntityList(List<OptionDto> optionDtos);
}