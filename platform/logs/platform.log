2025-08-29 11:28:47 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 10664 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 11:28:47 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 11:28:47 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "dev"
2025-08-29 11:28:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:28:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:28:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 213 ms. Found 2 JPA repository interfaces.
2025-08-29 11:28:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:28:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 11:28:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:28:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:28:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2025-08-29 11:28:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:28:50 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:28:50 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 11:28:50 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:28:50 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3103 ms
2025-08-29 11:28:50 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flyway' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Failed to instantiate [org.flywaydb.core.Flyway]: Factory method 'flyway' threw exception with message: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
2025-08-29 11:28:50 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 11:28:50 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 11:28:50 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flyway' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Failed to instantiate [org.flywaydb.core.Flyway]: Factory method 'flyway' threw exception with message: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:643)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1232)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:950)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:16)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.flywaydb.core.Flyway]: Factory method 'flyway' threw exception with message: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:643)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getIfUnique(DefaultListableBeanFactory.java:2153)
	at org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration.flyway(FlywayAutoConfiguration.java:172)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 22 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 40 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot load driver class: org.h2.Driver
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineDriverClassName(DataSourceProperties.java:175)
	at org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails.getDriverClassName(PropertiesJdbcConnectionDetails.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:55)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:117)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 41 common frames omitted
2025-08-29 11:29:15 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 15808 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 11:29:15 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 11:29:15 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "dev"
2025-08-29 11:29:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:29:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:29:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 177 ms. Found 2 JPA repository interfaces.
2025-08-29 11:29:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:29:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 11:29:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:29:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:29:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2025-08-29 11:29:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:29:18 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:29:18 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 11:29:18 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:29:18 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2659 ms
2025-08-29 11:29:18 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flyway' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Failed to instantiate [org.flywaydb.core.Flyway]: Factory method 'flyway' threw exception with message: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
2025-08-29 11:29:18 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 11:29:18 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 11:29:18 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flyway' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Failed to instantiate [org.flywaydb.core.Flyway]: Factory method 'flyway' threw exception with message: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:643)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1232)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:950)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:16)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.flywaydb.core.Flyway]: Factory method 'flyway' threw exception with message: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:643)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getIfUnique(DefaultListableBeanFactory.java:2153)
	at org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration.flyway(FlywayAutoConfiguration.java:172)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 22 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 40 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot load driver class: org.h2.Driver
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineDriverClassName(DataSourceProperties.java:175)
	at org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails.getDriverClassName(PropertiesJdbcConnectionDetails.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:55)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:117)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 41 common frames omitted
2025-08-29 11:30:50 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 16464 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 11:30:50 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 11:30:50 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 11:30:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:30:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:30:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 174 ms. Found 2 JPA repository interfaces.
2025-08-29 11:30:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:30:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 11:30:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:30:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:30:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2025-08-29 11:30:53 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:30:53 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:30:53 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 11:30:53 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:30:53 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2369 ms
2025-08-29 11:30:53 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 11:30:53 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
2025-08-29 11:30:53 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 11:30:53 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 11:30:53 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1232)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:950)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:16)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:643)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 21 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 35 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot load driver class: org.h2.Driver
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineDriverClassName(DataSourceProperties.java:175)
	at org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails.getDriverClassName(PropertiesJdbcConnectionDetails.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:55)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:117)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 36 common frames omitted
2025-08-29 11:31:34 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 14200 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 11:31:34 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 11:31:34 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 11:31:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:31:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:31:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 139 ms. Found 2 JPA repository interfaces.
2025-08-29 11:31:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:31:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 11:31:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:31:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:31:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2025-08-29 11:31:37 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:31:37 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:31:37 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 11:31:37 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:31:37 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2479 ms
2025-08-29 11:31:37 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 11:31:37 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
2025-08-29 11:31:37 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 11:31:37 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 11:31:37 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1232)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:950)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:16)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:643)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 21 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 35 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot load driver class: org.h2.Driver
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineDriverClassName(DataSourceProperties.java:175)
	at org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails.getDriverClassName(PropertiesJdbcConnectionDetails.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:55)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:117)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 36 common frames omitted
2025-08-29 11:32:08 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 19812 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 11:32:08 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 11:32:08 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 11:32:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:32:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:32:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 147 ms. Found 2 JPA repository interfaces.
2025-08-29 11:32:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:32:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 11:32:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:32:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:32:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2025-08-29 11:32:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:32:11 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:32:11 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 11:32:11 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:32:11 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2396 ms
2025-08-29 11:32:11 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 11:32:11 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
2025-08-29 11:32:11 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 11:32:11 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 11:32:11 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1232)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:950)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:16)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:643)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 21 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 35 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot load driver class: org.h2.Driver
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineDriverClassName(DataSourceProperties.java:175)
	at org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails.getDriverClassName(PropertiesJdbcConnectionDetails.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:55)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:117)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 36 common frames omitted
2025-08-29 11:33:40 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 14712 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 11:33:40 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 11:33:40 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 11:33:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:33:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:33:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 137 ms. Found 2 JPA repository interfaces.
2025-08-29 11:33:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:33:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 11:33:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:33:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:33:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2025-08-29 11:33:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:33:43 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:33:43 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 11:33:43 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:33:43 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2383 ms
2025-08-29 11:33:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 11:33:43 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 11:33:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 11:33:43 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 11:33:43 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 11:33:44 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 11:33:44 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 11:33:44 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 11:33:44 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 11:33:44 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 11:33:45 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 11:33:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 11:33:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 11:33:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tenants cascade 
2025-08-29 11:33:45 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 11:33:45 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 11:33:45 [main] DEBUG org.hibernate.SQL - 
    create table tenants (
        active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        code varchar(50) not null unique,
        name varchar(100) not null unique,
        description varchar(500),
        primary key (id)
    )
2025-08-29 11:33:45 [main] DEBUG org.hibernate.SQL - 
    create index idx_tenant_active 
       on tenants (active)
2025-08-29 11:33:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 11:33:45 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:33:45 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\CategoryController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.bharatshop.shared.repository.CategoryRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2025-08-29 11:33:45 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:33:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 11:33:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 11:33:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tenants cascade 
2025-08-29 11:33:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 11:33:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 11:33:45 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 11:33:45 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 11:33:45 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.bharatshop.platform.service.CategoryService required a bean of type 'com.bharatshop.shared.repository.CategoryRepository' that could not be found.


Action:

Consider defining a bean of type 'com.bharatshop.shared.repository.CategoryRepository' in your configuration.

2025-08-29 11:34:47 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 18080 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 11:34:47 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 11:34:47 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 11:34:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:34:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:34:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 171 ms. Found 6 JPA repository interfaces.
2025-08-29 11:34:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:34:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 11:34:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:34:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:34:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2025-08-29 11:34:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:34:50 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:34:50 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 11:34:50 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:34:50 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2887 ms
2025-08-29 11:34:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 11:34:50 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 11:34:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 11:34:50 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 11:34:51 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 11:34:51 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 11:34:51 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 11:34:51 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 11:34:51 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 11:34:51 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 11:34:52 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 11:34:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 11:34:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 11:34:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tenants cascade 
2025-08-29 11:34:52 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 11:34:52 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 11:34:52 [main] DEBUG org.hibernate.SQL - 
    create table tenants (
        active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        code varchar(50) not null unique,
        name varchar(100) not null unique,
        description varchar(500),
        primary key (id)
    )
2025-08-29 11:34:52 [main] DEBUG org.hibernate.SQL - 
    create index idx_tenant_active 
       on tenants (active)
2025-08-29 11:34:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 11:34:52 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:34:52 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\CategoryController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Not a managed type: class com.bharatshop.shared.entity.Category
2025-08-29 11:34:52 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:34:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 11:34:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 11:34:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tenants cascade 
2025-08-29 11:34:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 11:34:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 11:34:52 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 11:34:52 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 11:34:52 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\CategoryController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Not a managed type: class com.bharatshop.shared.entity.Category
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:19)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Not a managed type: class com.bharatshop.shared.entity.Category
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Not a managed type: class com.bharatshop.shared.entity.Category
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 33 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.bharatshop.shared.entity.Category
	at org.hibernate.metamodel.model.domain.internal.JpaMetamodelImpl.managedType(JpaMetamodelImpl.java:193)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.managedType(MappingMetamodelImpl.java:468)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.managedType(MappingMetamodelImpl.java:98)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:82)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:69)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:246)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:211)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:194)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:81)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:317)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
2025-08-29 11:37:56 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 12668 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 11:37:56 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 11:37:56 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 11:37:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:37:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:37:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 150 ms. Found 6 JPA repository interfaces.
2025-08-29 11:37:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:37:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 11:37:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:37:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:37:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2025-08-29 11:37:58 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:37:58 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:37:58 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 11:37:58 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:37:58 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2301 ms
2025-08-29 11:37:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 11:37:58 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 11:37:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 11:37:59 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 11:37:59 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 11:37:59 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 11:37:59 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 11:37:59 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 11:37:59 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 11:37:59 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 11:38:00 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 11:38:00 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 11:38:00 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 11:38:00 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tenants cascade 
2025-08-29 11:38:00 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 11:38:00 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 11:38:00 [main] DEBUG org.hibernate.SQL - 
    create table tenants (
        active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        code varchar(50) not null unique,
        name varchar(100) not null unique,
        description varchar(500),
        primary key (id)
    )
2025-08-29 11:38:00 [main] DEBUG org.hibernate.SQL - 
    create index idx_tenant_active 
       on tenants (active)
2025-08-29 11:38:00 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 11:38:00 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:38:00 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\CategoryController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Not a managed type: class com.bharatshop.shared.entity.Category
2025-08-29 11:38:00 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:38:00 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 11:38:00 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 11:38:00 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tenants cascade 
2025-08-29 11:38:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 11:38:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 11:38:00 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 11:38:00 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 11:38:00 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\CategoryController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Not a managed type: class com.bharatshop.shared.entity.Category
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:19)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Not a managed type: class com.bharatshop.shared.entity.Category
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Not a managed type: class com.bharatshop.shared.entity.Category
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 33 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.bharatshop.shared.entity.Category
	at org.hibernate.metamodel.model.domain.internal.JpaMetamodelImpl.managedType(JpaMetamodelImpl.java:193)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.managedType(MappingMetamodelImpl.java:468)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.managedType(MappingMetamodelImpl.java:98)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:82)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:69)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:246)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:211)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:194)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:81)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:317)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
2025-08-29 11:39:11 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 19088 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 11:39:11 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 11:39:11 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 11:39:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:39:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:39:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 141 ms. Found 6 JPA repository interfaces.
2025-08-29 11:39:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:39:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 11:39:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:39:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:39:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2025-08-29 11:39:13 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:39:13 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:39:13 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 11:39:13 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:39:13 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2291 ms
2025-08-29 11:39:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 11:39:13 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 11:39:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 11:39:13 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 11:39:13 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 11:39:14 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 11:39:14 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 11:39:14 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 11:39:14 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 11:39:14 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 11:39:15 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id bigint,
        product_id uuid not null
    )
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 11:39:15 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 11:39:15 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:39:16 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 11:39:16 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\CategoryController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
2025-08-29 11:39:16 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:39:16 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:39:16 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 11:39:16 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 11:39:16 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 11:39:16 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 11:39:16 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 11:39:16 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 11:39:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 11:39:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 11:39:16 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 11:39:16 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 11:39:16 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\CategoryController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:24)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:70)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:60)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:170)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.Category' [SELECT c FROM Category c WHERE c.tenantId = :tenantId AND c.parentId IS NULL AND c.isDeleted = false ORDER BY c.sortOrder ASC]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:827)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:732)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy185.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:94)
	... 62 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.Category' [SELECT c FROM Category c WHERE c.tenantId = :tenantId AND c.parentId IS NULL AND c.isDeleted = false ORDER BY c.sortOrder ASC]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:87)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:769)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:819)
	... 71 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.Category'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:203)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:196)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:91)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5050)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:4999)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:4974)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathExpression(SemanticQueryBuilder.java:1776)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathExpressionContext.accept(HqlParser.java:7699)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitBarePrimaryExpression(HqlParserBaseVisitor.java:756)
	at org.hibernate.grammars.hql.HqlParser$BarePrimaryExpressionContext.accept(HqlParser.java:7157)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.createComparisonPredicate(SemanticQueryBuilder.java:2429)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:2392)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$ComparisonPredicateContext.accept(HqlParser.java:6164)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:2262)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$AndPredicateContext.accept(HqlParser.java:6039)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:2244)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$WhereClauseContext.accept(HqlParser.java:5905)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1159)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:941)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:1869)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:926)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:1740)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:443)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:402)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:311)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 75 common frames omitted
2025-08-29 11:39:57 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 27828 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 11:39:57 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 11:39:57 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 11:39:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:39:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:39:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 142 ms. Found 6 JPA repository interfaces.
2025-08-29 11:39:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:39:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 11:39:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:39:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:39:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
2025-08-29 11:39:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:39:59 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:39:59 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 11:39:59 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:39:59 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2290 ms
2025-08-29 11:40:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 11:40:00 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 11:40:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 11:40:00 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 11:40:00 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 11:40:00 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 11:40:00 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 11:40:00 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 11:40:00 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 11:40:00 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 11:40:01 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 11:40:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:40:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 11:40:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 11:40:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 11:40:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 11:40:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 11:40:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 11:40:01 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 11:40:01 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id bigint,
        product_id uuid not null
    )
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 11:40:02 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:40:02 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 11:40:02 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\CategoryController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
2025-08-29 11:40:02 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 11:40:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 11:40:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 11:40:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 11:40:02 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 11:40:02 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 11:40:02 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\CategoryController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:24)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:70)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:60)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:170)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.Category' [SELECT c FROM Category c WHERE c.tenantId = :tenantId AND c.parentId IS NULL AND c.isDeleted = false ORDER BY c.sortOrder ASC]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:827)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:732)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy185.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:94)
	... 62 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.Category' [SELECT c FROM Category c WHERE c.tenantId = :tenantId AND c.parentId IS NULL AND c.isDeleted = false ORDER BY c.sortOrder ASC]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:87)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:769)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:819)
	... 71 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.Category'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:203)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:196)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:91)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5050)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:4999)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:4974)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathExpression(SemanticQueryBuilder.java:1776)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathExpressionContext.accept(HqlParser.java:7699)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitBarePrimaryExpression(HqlParserBaseVisitor.java:756)
	at org.hibernate.grammars.hql.HqlParser$BarePrimaryExpressionContext.accept(HqlParser.java:7157)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.createComparisonPredicate(SemanticQueryBuilder.java:2429)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:2392)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$ComparisonPredicateContext.accept(HqlParser.java:6164)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:2262)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$AndPredicateContext.accept(HqlParser.java:6039)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:2244)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$WhereClauseContext.accept(HqlParser.java:5905)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1159)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:941)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:1869)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:926)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:1740)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:443)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:402)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:311)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 75 common frames omitted
2025-08-29 11:40:56 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 8316 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 11:40:56 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 11:40:56 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 11:40:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:40:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:40:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 148 ms. Found 6 JPA repository interfaces.
2025-08-29 11:40:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:40:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 11:40:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:40:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:40:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 0 Redis repository interfaces.
2025-08-29 11:40:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:40:59 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:40:59 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 11:40:59 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:40:59 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2497 ms
2025-08-29 11:40:59 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 11:40:59 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 11:40:59 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 11:40:59 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 11:40:59 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 11:40:59 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 11:41:00 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 11:41:00 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 11:41:00 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 11:41:00 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 11:41:01 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id bigint,
        product_id uuid not null
    )
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 11:41:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 11:41:01 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:41:01 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 11:41:02 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\CategoryController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
2025-08-29 11:41:02 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:41:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:41:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 11:41:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 11:41:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 11:41:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 11:41:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 11:41:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 11:41:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 11:41:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 11:41:02 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 11:41:02 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 11:41:02 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\CategoryController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:24)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:70)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:60)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:170)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.Category' [SELECT c FROM Category c WHERE c.tenantId = :tenantId AND c.parentId IS NULL AND c.isDeleted = false ORDER BY c.sortOrder ASC]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:827)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:732)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy185.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:94)
	... 62 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.Category' [SELECT c FROM Category c WHERE c.tenantId = :tenantId AND c.parentId IS NULL AND c.isDeleted = false ORDER BY c.sortOrder ASC]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:87)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:769)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:819)
	... 71 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.Category'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:203)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:196)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:91)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5050)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:4999)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:4974)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathExpression(SemanticQueryBuilder.java:1776)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathExpressionContext.accept(HqlParser.java:7699)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitBarePrimaryExpression(HqlParserBaseVisitor.java:756)
	at org.hibernate.grammars.hql.HqlParser$BarePrimaryExpressionContext.accept(HqlParser.java:7157)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.createComparisonPredicate(SemanticQueryBuilder.java:2429)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:2392)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$ComparisonPredicateContext.accept(HqlParser.java:6164)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:2262)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$AndPredicateContext.accept(HqlParser.java:6039)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:2244)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$WhereClauseContext.accept(HqlParser.java:5905)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1159)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:941)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:1869)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:926)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:1740)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:443)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:402)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:311)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 75 common frames omitted
2025-08-29 11:43:16 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 2872 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 11:43:16 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 11:43:16 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 11:43:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:43:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:43:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 155 ms. Found 6 JPA repository interfaces.
2025-08-29 11:43:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:43:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 11:43:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:43:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:43:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2025-08-29 11:43:19 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:43:19 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:43:19 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 11:43:19 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:43:19 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2552 ms
2025-08-29 11:43:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 11:43:19 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 11:43:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 11:43:19 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 11:43:20 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 11:43:20 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 11:43:20 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 11:43:20 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 11:43:20 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 11:43:20 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 11:43:21 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id bigint,
        product_id uuid not null
    )
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 11:43:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 11:43:21 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:43:22 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 11:43:22 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\CategoryController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
2025-08-29 11:43:22 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:43:22 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:43:22 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 11:43:22 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 11:43:22 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 11:43:22 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 11:43:22 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 11:43:22 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 11:43:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 11:43:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 11:43:22 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 11:43:22 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 11:43:22 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\CategoryController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:24)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:70)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:60)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:170)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.Category' [SELECT c FROM Category c WHERE c.tenantId = :tenantId AND c.parentId IS NULL AND c.isDeleted = false ORDER BY c.sortOrder ASC]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:827)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:732)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy185.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:94)
	... 62 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.Category' [SELECT c FROM Category c WHERE c.tenantId = :tenantId AND c.parentId IS NULL AND c.isDeleted = false ORDER BY c.sortOrder ASC]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:87)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:769)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:819)
	... 71 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.Category'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:203)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:196)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:91)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5050)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:4999)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:4974)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathExpression(SemanticQueryBuilder.java:1776)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathExpressionContext.accept(HqlParser.java:7699)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitBarePrimaryExpression(HqlParserBaseVisitor.java:756)
	at org.hibernate.grammars.hql.HqlParser$BarePrimaryExpressionContext.accept(HqlParser.java:7157)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.createComparisonPredicate(SemanticQueryBuilder.java:2429)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:2392)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$ComparisonPredicateContext.accept(HqlParser.java:6164)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:2262)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$AndPredicateContext.accept(HqlParser.java:6039)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:2244)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$WhereClauseContext.accept(HqlParser.java:5905)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1159)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:941)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:1869)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:926)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:1740)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:443)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:402)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:311)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 75 common frames omitted
2025-08-29 11:45:09 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 17592 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 11:45:09 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 11:45:09 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 11:45:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:45:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:45:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 150 ms. Found 6 JPA repository interfaces.
2025-08-29 11:45:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 11:45:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 11:45:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:45:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 11:45:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
2025-08-29 11:45:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:45:11 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:45:11 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 11:45:11 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:45:11 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2477 ms
2025-08-29 11:45:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 11:45:12 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 11:45:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 11:45:12 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 11:45:12 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 11:45:12 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 11:45:12 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 11:45:12 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 11:45:12 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 11:45:12 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 11:45:14 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id bigint,
        product_id uuid not null
    )
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 11:45:14 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:45:14 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 11:45:14 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\CategoryController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
2025-08-29 11:45:14 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 11:45:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 11:45:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 11:45:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 11:45:14 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 11:45:14 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 11:45:14 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\CategoryController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:24)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'categoryRepository' defined in com.bharatshop.shared.repository.CategoryRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long); Reason: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.bharatshop.shared.repository.CategoryRepository.findRootCategories(java.lang.Long)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:70)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:60)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:170)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.Category' [SELECT c FROM Category c WHERE c.tenantId = :tenantId AND c.parentId IS NULL AND c.isDeleted = false ORDER BY c.sortOrder ASC]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:827)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:732)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy185.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:94)
	... 62 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.Category' [SELECT c FROM Category c WHERE c.tenantId = :tenantId AND c.parentId IS NULL AND c.isDeleted = false ORDER BY c.sortOrder ASC]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:87)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:769)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:819)
	... 71 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.Category'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:203)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:196)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:91)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5050)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:4999)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:4974)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathExpression(SemanticQueryBuilder.java:1776)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathExpressionContext.accept(HqlParser.java:7699)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitBarePrimaryExpression(HqlParserBaseVisitor.java:756)
	at org.hibernate.grammars.hql.HqlParser$BarePrimaryExpressionContext.accept(HqlParser.java:7157)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.createComparisonPredicate(SemanticQueryBuilder.java:2429)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:2392)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$ComparisonPredicateContext.accept(HqlParser.java:6164)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:2262)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$AndPredicateContext.accept(HqlParser.java:6039)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:2244)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$WhereClauseContext.accept(HqlParser.java:5905)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1159)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:941)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:1869)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:926)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:1740)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:443)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:402)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:311)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 75 common frames omitted
2025-08-29 17:22:25 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 21988 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 17:22:25 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 17:22:25 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 17:22:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:22:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 17:22:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 159 ms. Found 13 JPA repository interfaces.
2025-08-29 17:22:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:22:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 17:22:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:22:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:22:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 0 Redis repository interfaces.
2025-08-29 17:22:28 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 17:22:28 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 17:22:28 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 17:22:28 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 17:22:28 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2602 ms
2025-08-29 17:22:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 17:22:28 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 17:22:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 17:22:28 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 17:22:28 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 17:22:28 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 17:22:29 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 17:22:29 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 17:22:29 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 17:22:29 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 17:22:30 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create table customer_addresses (
        is_active boolean not null,
        is_default boolean not null,
        created_at timestamp(6) not null,
        customer_id bigint not null,
        id bigint generated by default as identity,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        pincode varchar(10) not null,
        phone varchar(15) not null,
        city varchar(100) not null,
        country varchar(100) not null,
        name varchar(100) not null,
        state varchar(100) not null,
        line1 varchar(255) not null,
        line2 varchar(255),
        primary key (id)
    )
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create table pages (
        active boolean not null,
        published boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        status varchar(50),
        author varchar(100),
        slug varchar(100) not null,
        template varchar(100),
        meta_title varchar(200),
        title varchar(200) not null,
        excerpt varchar(500),
        featured_image varchar(500),
        meta_description varchar(500),
        meta_keywords varchar(1000),
        content TEXT,
        custom_css TEXT,
        custom_js TEXT,
        layout JSON,
        page_type varchar(255) not null check (page_type in ('STATIC','DYNAMIC','LANDING','LEGAL')),
        seo JSON,
        template_id varchar(255),
        primary key (id)
    )
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create table payment_gateways (
        is_active boolean not null,
        is_test_mode boolean not null,
        created_at timestamp(6) not null,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        id uuid not null,
        callback_url varchar(255),
        currency varchar(255) not null,
        gateway_name varchar(255) not null,
        gateway_type varchar(255) not null check (gateway_type in ('RAZORPAY','PAYU','STRIPE','PAYPAL')),
        key_id varchar(255) not null,
        key_secret varchar(255) not null,
        merchant_id varchar(255),
        webhook_secret varchar(255),
        webhook_url varchar(255),
        primary key (id)
    )
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        refund_amount numeric(10,2),
        webhook_verified boolean not null,
        created_at timestamp(6) not null,
        failed_at timestamp(6),
        id bigint generated by default as identity,
        order_id bigint not null,
        paid_at timestamp(6),
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        payment_gateway_id uuid not null,
        currency varchar(255) not null,
        description varchar(255),
        failure_reason varchar(255),
        gateway_response TEXT,
        method varchar(255) check (method in ('CARD','NETBANKING','WALLET','UPI','EMI','PAYLATER')),
        notes TEXT,
        razorpay_order_id varchar(255) unique,
        razorpay_payment_id varchar(255) unique,
        razorpay_signature varchar(255),
        receipt varchar(255),
        refund_id varchar(255),
        status varchar(255) not null check (status in ('CREATED','AUTHORIZED','CAPTURED','REFUNDED','FAILED','CANCELLED')),
        primary key (id)
    )
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create table plans (
        active boolean not null,
        display_order integer,
        duration_days integer not null,
        is_popular boolean,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        name varchar(100) not null,
        description varchar(500),
        features json,
        primary key (id)
    )
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id uuid,
        product_id uuid not null
    )
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create table subscriptions (
        auto_renew boolean,
        cancelled_at timestamp(6),
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        end_date timestamp(6) not null,
        next_billing_date timestamp(6),
        start_date timestamp(6) not null,
        updated_at timestamp(6),
        id uuid not null,
        plan_id uuid not null,
        tenant_id uuid,
        vendor_id uuid not null,
        cancelled_reason varchar(255),
        razorpay_order_id varchar(255),
        razorpay_payment_id varchar(255),
        razorpay_subscription_id varchar(255),
        status varchar(255) not null check (status in ('PENDING','ACTIVE','EXPIRED','CANCELLED','SUSPENDED','TRIAL','PAYMENT_FAILED','RENEWAL_PENDING')),
        primary key (id)
    )
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create table templates (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        category varchar(100),
        preview_image varchar(500),
        config JSON,
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer_tenant 
       on customer_addresses (customer_id, tenant_id)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_tenant 
       on customer_addresses (tenant_id)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer 
       on customer_addresses (customer_id)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_slug 
       on pages (slug)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_tenant_slug 
       on pages (tenant_id, slug)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_active 
       on pages (active)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_published 
       on pages (published)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_type 
       on pages (page_type)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_name 
       on templates (name)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_tenant_id 
       on templates (tenant_id)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKsg72b95wtfmuek6xmpk76en5v 
       foreign key (payment_gateway_id) 
       references payment_gateways
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 17:22:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists subscriptions 
       add constraint FKb1uf5qnxi6uj95se8ykydntl1 
       foreign key (plan_id) 
       references plans
2025-08-29 17:22:30 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:22:31 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 17:22:31 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\CategoryController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'categoryService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\CategoryService.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'com.bharatshop.shared.service.FeatureFlagService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2025-08-29 17:22:31 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:22:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:22:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:22:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:22:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:22:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:22:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:22:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:22:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:22:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:22:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:22:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:22:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:22:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:22:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:22:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 17:22:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 17:22:31 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 17:22:31 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 17:22:31 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.bharatshop.platform.service.CategoryService required a bean of type 'com.bharatshop.shared.service.FeatureFlagService' that could not be found.


Action:

Consider defining a bean of type 'com.bharatshop.shared.service.FeatureFlagService' in your configuration.

2025-08-29 17:23:40 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 29456 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 17:23:40 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 17:23:40 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 17:23:40 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [com.bharatshop.platform.PlatformApplication]
2025-08-29 17:23:41 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [com.bharatshop.platform.PlatformApplication]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:179)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:416)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:289)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:789)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:29)
Caused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'securityConfig' for bean class [com.bharatshop.shared.config.SecurityConfig] conflicts with existing, non-compatible bean definition of same name and class [com.bharatshop.platform.security.SecurityConfig]
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:361)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:288)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:306)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:246)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:197)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:165)
	... 13 common frames omitted
2025-08-29 17:25:10 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 28816 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 17:25:10 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 17:25:10 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 17:25:11 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'passwordEncoder' defined in class path resource [com/bharatshop/shared/config/PasswordConfig.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=passwordConfig; factoryMethodName=passwordEncoder; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [com/bharatshop/shared/config/PasswordConfig.class]] for bean 'passwordEncoder' since there is already [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=platformSecurityConfig; factoryMethodName=passwordEncoder; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [com/bharatshop/platform/security/PlatformSecurityConfig.class]] bound.
2025-08-29 17:25:11 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 17:25:11 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'passwordEncoder', defined in class path resource [com/bharatshop/shared/config/PasswordConfig.class], could not be registered. A bean with that name has already been defined in class path resource [com/bharatshop/platform/security/PlatformSecurityConfig.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2025-08-29 17:26:26 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 7028 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 17:26:26 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 17:26:26 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 17:26:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:26:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 17:26:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 172 ms. Found 13 JPA repository interfaces.
2025-08-29 17:26:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:26:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 17:26:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:26:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:26:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
2025-08-29 17:26:28 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 17:26:28 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 17:26:28 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 17:26:29 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 17:26:29 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2769 ms
2025-08-29 17:26:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 17:26:29 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 17:26:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 17:26:29 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 17:26:29 [main] DEBUG c.b.s.filter.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 17:26:29 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 17:26:29 [main] DEBUG c.b.s.f.SessionAuthenticationFilter - Filter 'sessionAuthenticationFilter' configured for use
2025-08-29 17:26:29 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 17:26:29 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 17:26:29 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 17:26:30 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 17:26:30 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 17:26:31 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create table customer_addresses (
        is_active boolean not null,
        is_default boolean not null,
        created_at timestamp(6) not null,
        customer_id bigint not null,
        id bigint generated by default as identity,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        pincode varchar(10) not null,
        phone varchar(15) not null,
        city varchar(100) not null,
        country varchar(100) not null,
        name varchar(100) not null,
        state varchar(100) not null,
        line1 varchar(255) not null,
        line2 varchar(255),
        primary key (id)
    )
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create table pages (
        active boolean not null,
        published boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        status varchar(50),
        author varchar(100),
        slug varchar(100) not null,
        template varchar(100),
        meta_title varchar(200),
        title varchar(200) not null,
        excerpt varchar(500),
        featured_image varchar(500),
        meta_description varchar(500),
        meta_keywords varchar(1000),
        content TEXT,
        custom_css TEXT,
        custom_js TEXT,
        layout JSON,
        page_type varchar(255) not null check (page_type in ('STATIC','DYNAMIC','LANDING','LEGAL')),
        seo JSON,
        template_id varchar(255),
        primary key (id)
    )
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create table payment_gateways (
        is_active boolean not null,
        is_test_mode boolean not null,
        created_at timestamp(6) not null,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        id uuid not null,
        callback_url varchar(255),
        currency varchar(255) not null,
        gateway_name varchar(255) not null,
        gateway_type varchar(255) not null check (gateway_type in ('RAZORPAY','PAYU','STRIPE','PAYPAL')),
        key_id varchar(255) not null,
        key_secret varchar(255) not null,
        merchant_id varchar(255),
        webhook_secret varchar(255),
        webhook_url varchar(255),
        primary key (id)
    )
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        refund_amount numeric(10,2),
        webhook_verified boolean not null,
        created_at timestamp(6) not null,
        failed_at timestamp(6),
        id bigint generated by default as identity,
        order_id bigint not null,
        paid_at timestamp(6),
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        payment_gateway_id uuid not null,
        currency varchar(255) not null,
        description varchar(255),
        failure_reason varchar(255),
        gateway_response TEXT,
        method varchar(255) check (method in ('CARD','NETBANKING','WALLET','UPI','EMI','PAYLATER')),
        notes TEXT,
        razorpay_order_id varchar(255) unique,
        razorpay_payment_id varchar(255) unique,
        razorpay_signature varchar(255),
        receipt varchar(255),
        refund_id varchar(255),
        status varchar(255) not null check (status in ('CREATED','AUTHORIZED','CAPTURED','REFUNDED','FAILED','CANCELLED')),
        primary key (id)
    )
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create table plans (
        active boolean not null,
        display_order integer,
        duration_days integer not null,
        is_popular boolean,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        name varchar(100) not null,
        description varchar(500),
        features json,
        primary key (id)
    )
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id uuid,
        product_id uuid not null
    )
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create table subscriptions (
        auto_renew boolean,
        cancelled_at timestamp(6),
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        end_date timestamp(6) not null,
        next_billing_date timestamp(6),
        start_date timestamp(6) not null,
        updated_at timestamp(6),
        id uuid not null,
        plan_id uuid not null,
        tenant_id uuid,
        vendor_id uuid not null,
        cancelled_reason varchar(255),
        razorpay_order_id varchar(255),
        razorpay_payment_id varchar(255),
        razorpay_subscription_id varchar(255),
        status varchar(255) not null check (status in ('PENDING','ACTIVE','EXPIRED','CANCELLED','SUSPENDED','TRIAL','PAYMENT_FAILED','RENEWAL_PENDING')),
        primary key (id)
    )
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create table templates (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        category varchar(100),
        preview_image varchar(500),
        config JSON,
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer_tenant 
       on customer_addresses (customer_id, tenant_id)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_tenant 
       on customer_addresses (tenant_id)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer 
       on customer_addresses (customer_id)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_slug 
       on pages (slug)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_tenant_slug 
       on pages (tenant_id, slug)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_active 
       on pages (active)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_published 
       on pages (published)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_type 
       on pages (page_type)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_name 
       on templates (name)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_tenant_id 
       on templates (tenant_id)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKsg72b95wtfmuek6xmpk76en5v 
       foreign key (payment_gateway_id) 
       references payment_gateways
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 17:26:31 [main] DEBUG org.hibernate.SQL - 
    alter table if exists subscriptions 
       add constraint FKb1uf5qnxi6uj95se8ykydntl1 
       foreign key (plan_id) 
       references plans
2025-08-29 17:26:31 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:26:31 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 17:26:32 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'pageController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\PageController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'pageService' defined in URL [jar:file:/C:/Users/Adarsh/.m2/repository/com/bharatshop/bharatshop-shared/1.0.0-SNAPSHOT/bharatshop-shared-1.0.0-SNAPSHOT.jar!/com/bharatshop/shared/service/PageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'pageRepository' defined in com.bharatshop.shared.repository.PageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String); Reason: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
2025-08-29 17:26:32 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:26:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:26:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:26:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:26:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:26:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:26:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:26:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:26:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:26:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:26:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:26:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:26:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:26:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:26:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:26:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 17:26:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 17:26:32 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 17:26:32 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 17:26:32 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'pageController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\PageController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'pageService' defined in URL [jar:file:/C:/Users/Adarsh/.m2/repository/com/bharatshop/bharatshop-shared/1.0.0-SNAPSHOT/bharatshop-shared-1.0.0-SNAPSHOT.jar!/com/bharatshop/shared/service/PageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'pageRepository' defined in com.bharatshop.shared.repository.PageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String); Reason: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:29)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'pageService' defined in URL [jar:file:/C:/Users/Adarsh/.m2/repository/com/bharatshop/bharatshop-shared/1.0.0-SNAPSHOT/bharatshop-shared-1.0.0-SNAPSHOT.jar!/com/bharatshop/shared/service/PageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'pageRepository' defined in com.bharatshop.shared.repository.PageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String); Reason: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'pageRepository' defined in com.bharatshop.shared.repository.PageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String); Reason: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String); Reason: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:70)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:60)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:170)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'deleted' of 'com.bharatshop.shared.entity.Page' [SELECT COUNT(p) > 0 FROM Page p WHERE p.slug = :slug AND p.tenantId = :__$synthetic$__1 AND p.deleted = false]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:827)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:732)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy191.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:94)
	... 62 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'deleted' of 'com.bharatshop.shared.entity.Page' [SELECT COUNT(p) > 0 FROM Page p WHERE p.slug = :slug AND p.tenantId = :__$synthetic$__1 AND p.deleted = false]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:87)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:769)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:819)
	... 70 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'deleted' of 'com.bharatshop.shared.entity.Page'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:203)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:196)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:91)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5050)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:4999)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:4974)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathExpression(SemanticQueryBuilder.java:1776)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathExpressionContext.accept(HqlParser.java:7699)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitBarePrimaryExpression(HqlParserBaseVisitor.java:756)
	at org.hibernate.grammars.hql.HqlParser$BarePrimaryExpressionContext.accept(HqlParser.java:7157)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.createComparisonPredicate(SemanticQueryBuilder.java:2429)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:2392)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$ComparisonPredicateContext.accept(HqlParser.java:6164)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:2262)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$AndPredicateContext.accept(HqlParser.java:6039)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:2244)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$WhereClauseContext.accept(HqlParser.java:5905)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1159)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:941)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:1869)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:926)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:1740)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:443)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:402)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:311)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 74 common frames omitted
2025-08-29 17:27:12 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 5752 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 17:27:12 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 17:27:12 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 17:27:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:27:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 17:27:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 202 ms. Found 13 JPA repository interfaces.
2025-08-29 17:27:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:27:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 17:27:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:27:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:27:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
2025-08-29 17:27:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 17:27:14 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 17:27:14 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 17:27:14 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 17:27:14 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2622 ms
2025-08-29 17:27:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 17:27:15 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 17:27:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 17:27:15 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 17:27:15 [main] DEBUG c.b.s.filter.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 17:27:15 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 17:27:15 [main] DEBUG c.b.s.f.SessionAuthenticationFilter - Filter 'sessionAuthenticationFilter' configured for use
2025-08-29 17:27:15 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 17:27:15 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 17:27:15 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 17:27:15 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 17:27:15 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 17:27:17 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create table customer_addresses (
        is_active boolean not null,
        is_default boolean not null,
        created_at timestamp(6) not null,
        customer_id bigint not null,
        id bigint generated by default as identity,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        pincode varchar(10) not null,
        phone varchar(15) not null,
        city varchar(100) not null,
        country varchar(100) not null,
        name varchar(100) not null,
        state varchar(100) not null,
        line1 varchar(255) not null,
        line2 varchar(255),
        primary key (id)
    )
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create table pages (
        active boolean not null,
        published boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        status varchar(50),
        author varchar(100),
        slug varchar(100) not null,
        template varchar(100),
        meta_title varchar(200),
        title varchar(200) not null,
        excerpt varchar(500),
        featured_image varchar(500),
        meta_description varchar(500),
        meta_keywords varchar(1000),
        content TEXT,
        custom_css TEXT,
        custom_js TEXT,
        layout JSON,
        page_type varchar(255) not null check (page_type in ('STATIC','DYNAMIC','LANDING','LEGAL')),
        seo JSON,
        template_id varchar(255),
        primary key (id)
    )
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create table payment_gateways (
        is_active boolean not null,
        is_test_mode boolean not null,
        created_at timestamp(6) not null,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        id uuid not null,
        callback_url varchar(255),
        currency varchar(255) not null,
        gateway_name varchar(255) not null,
        gateway_type varchar(255) not null check (gateway_type in ('RAZORPAY','PAYU','STRIPE','PAYPAL')),
        key_id varchar(255) not null,
        key_secret varchar(255) not null,
        merchant_id varchar(255),
        webhook_secret varchar(255),
        webhook_url varchar(255),
        primary key (id)
    )
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        refund_amount numeric(10,2),
        webhook_verified boolean not null,
        created_at timestamp(6) not null,
        failed_at timestamp(6),
        id bigint generated by default as identity,
        order_id bigint not null,
        paid_at timestamp(6),
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        payment_gateway_id uuid not null,
        currency varchar(255) not null,
        description varchar(255),
        failure_reason varchar(255),
        gateway_response TEXT,
        method varchar(255) check (method in ('CARD','NETBANKING','WALLET','UPI','EMI','PAYLATER')),
        notes TEXT,
        razorpay_order_id varchar(255) unique,
        razorpay_payment_id varchar(255) unique,
        razorpay_signature varchar(255),
        receipt varchar(255),
        refund_id varchar(255),
        status varchar(255) not null check (status in ('CREATED','AUTHORIZED','CAPTURED','REFUNDED','FAILED','CANCELLED')),
        primary key (id)
    )
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create table plans (
        active boolean not null,
        display_order integer,
        duration_days integer not null,
        is_popular boolean,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        name varchar(100) not null,
        description varchar(500),
        features json,
        primary key (id)
    )
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id uuid,
        product_id uuid not null
    )
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create table subscriptions (
        auto_renew boolean,
        cancelled_at timestamp(6),
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        end_date timestamp(6) not null,
        next_billing_date timestamp(6),
        start_date timestamp(6) not null,
        updated_at timestamp(6),
        id uuid not null,
        plan_id uuid not null,
        tenant_id uuid,
        vendor_id uuid not null,
        cancelled_reason varchar(255),
        razorpay_order_id varchar(255),
        razorpay_payment_id varchar(255),
        razorpay_subscription_id varchar(255),
        status varchar(255) not null check (status in ('PENDING','ACTIVE','EXPIRED','CANCELLED','SUSPENDED','TRIAL','PAYMENT_FAILED','RENEWAL_PENDING')),
        primary key (id)
    )
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create table templates (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        category varchar(100),
        preview_image varchar(500),
        config JSON,
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer_tenant 
       on customer_addresses (customer_id, tenant_id)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_tenant 
       on customer_addresses (tenant_id)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer 
       on customer_addresses (customer_id)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_slug 
       on pages (slug)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_tenant_slug 
       on pages (tenant_id, slug)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_active 
       on pages (active)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_published 
       on pages (published)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_type 
       on pages (page_type)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_name 
       on templates (name)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_tenant_id 
       on templates (tenant_id)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKsg72b95wtfmuek6xmpk76en5v 
       foreign key (payment_gateway_id) 
       references payment_gateways
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 17:27:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists subscriptions 
       add constraint FKb1uf5qnxi6uj95se8ykydntl1 
       foreign key (plan_id) 
       references plans
2025-08-29 17:27:17 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:27:17 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 17:27:18 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'pageController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\PageController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'pageService' defined in URL [jar:file:/C:/Users/Adarsh/.m2/repository/com/bharatshop/bharatshop-shared/1.0.0-SNAPSHOT/bharatshop-shared-1.0.0-SNAPSHOT.jar!/com/bharatshop/shared/service/PageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'pageRepository' defined in com.bharatshop.shared.repository.PageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String); Reason: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
2025-08-29 17:27:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:27:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:27:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:27:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:27:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:27:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:27:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:27:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:27:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:27:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:27:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:27:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:27:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:27:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:27:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:27:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 17:27:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 17:27:18 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 17:27:18 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 17:27:18 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'pageController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\PageController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'pageService' defined in URL [jar:file:/C:/Users/Adarsh/.m2/repository/com/bharatshop/bharatshop-shared/1.0.0-SNAPSHOT/bharatshop-shared-1.0.0-SNAPSHOT.jar!/com/bharatshop/shared/service/PageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'pageRepository' defined in com.bharatshop.shared.repository.PageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String); Reason: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:29)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'pageService' defined in URL [jar:file:/C:/Users/Adarsh/.m2/repository/com/bharatshop/bharatshop-shared/1.0.0-SNAPSHOT/bharatshop-shared-1.0.0-SNAPSHOT.jar!/com/bharatshop/shared/service/PageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'pageRepository' defined in com.bharatshop.shared.repository.PageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String); Reason: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'pageRepository' defined in com.bharatshop.shared.repository.PageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String); Reason: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String); Reason: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:70)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:60)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:170)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'deleted' of 'com.bharatshop.shared.entity.Page' [SELECT COUNT(p) > 0 FROM Page p WHERE p.slug = :slug AND p.tenantId = :__$synthetic$__1 AND p.deleted = false]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:827)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:732)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy191.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:94)
	... 62 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'deleted' of 'com.bharatshop.shared.entity.Page' [SELECT COUNT(p) > 0 FROM Page p WHERE p.slug = :slug AND p.tenantId = :__$synthetic$__1 AND p.deleted = false]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:87)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:769)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:819)
	... 70 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'deleted' of 'com.bharatshop.shared.entity.Page'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:203)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:196)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:91)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5050)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:4999)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:4974)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathExpression(SemanticQueryBuilder.java:1776)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathExpressionContext.accept(HqlParser.java:7699)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitBarePrimaryExpression(HqlParserBaseVisitor.java:756)
	at org.hibernate.grammars.hql.HqlParser$BarePrimaryExpressionContext.accept(HqlParser.java:7157)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.createComparisonPredicate(SemanticQueryBuilder.java:2429)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:2392)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$ComparisonPredicateContext.accept(HqlParser.java:6164)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:2262)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$AndPredicateContext.accept(HqlParser.java:6039)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:2244)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$WhereClauseContext.accept(HqlParser.java:5905)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1159)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:941)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:1869)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:926)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:1740)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:443)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:402)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:311)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 74 common frames omitted
2025-08-29 17:28:43 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 8884 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 17:28:43 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 17:28:43 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 17:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 17:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 185 ms. Found 13 JPA repository interfaces.
2025-08-29 17:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 17:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:28:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2025-08-29 17:28:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 17:28:45 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 17:28:45 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 17:28:46 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 17:28:46 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2516 ms
2025-08-29 17:28:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 17:28:46 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 17:28:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 17:28:46 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 17:28:46 [main] DEBUG c.b.s.filter.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 17:28:46 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 17:28:46 [main] DEBUG c.b.s.f.SessionAuthenticationFilter - Filter 'sessionAuthenticationFilter' configured for use
2025-08-29 17:28:46 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 17:28:46 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 17:28:46 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 17:28:47 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 17:28:47 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 17:28:48 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create table customer_addresses (
        is_active boolean not null,
        is_default boolean not null,
        created_at timestamp(6) not null,
        customer_id bigint not null,
        id bigint generated by default as identity,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        pincode varchar(10) not null,
        phone varchar(15) not null,
        city varchar(100) not null,
        country varchar(100) not null,
        name varchar(100) not null,
        state varchar(100) not null,
        line1 varchar(255) not null,
        line2 varchar(255),
        primary key (id)
    )
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create table pages (
        active boolean not null,
        published boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        status varchar(50),
        author varchar(100),
        slug varchar(100) not null,
        template varchar(100),
        meta_title varchar(200),
        title varchar(200) not null,
        excerpt varchar(500),
        featured_image varchar(500),
        meta_description varchar(500),
        meta_keywords varchar(1000),
        content TEXT,
        custom_css TEXT,
        custom_js TEXT,
        layout JSON,
        page_type varchar(255) not null check (page_type in ('STATIC','DYNAMIC','LANDING','LEGAL')),
        seo JSON,
        template_id varchar(255),
        primary key (id)
    )
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create table payment_gateways (
        is_active boolean not null,
        is_test_mode boolean not null,
        created_at timestamp(6) not null,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        id uuid not null,
        callback_url varchar(255),
        currency varchar(255) not null,
        gateway_name varchar(255) not null,
        gateway_type varchar(255) not null check (gateway_type in ('RAZORPAY','PAYU','STRIPE','PAYPAL')),
        key_id varchar(255) not null,
        key_secret varchar(255) not null,
        merchant_id varchar(255),
        webhook_secret varchar(255),
        webhook_url varchar(255),
        primary key (id)
    )
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        refund_amount numeric(10,2),
        webhook_verified boolean not null,
        created_at timestamp(6) not null,
        failed_at timestamp(6),
        id bigint generated by default as identity,
        order_id bigint not null,
        paid_at timestamp(6),
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        payment_gateway_id uuid not null,
        currency varchar(255) not null,
        description varchar(255),
        failure_reason varchar(255),
        gateway_response TEXT,
        method varchar(255) check (method in ('CARD','NETBANKING','WALLET','UPI','EMI','PAYLATER')),
        notes TEXT,
        razorpay_order_id varchar(255) unique,
        razorpay_payment_id varchar(255) unique,
        razorpay_signature varchar(255),
        receipt varchar(255),
        refund_id varchar(255),
        status varchar(255) not null check (status in ('CREATED','AUTHORIZED','CAPTURED','REFUNDED','FAILED','CANCELLED')),
        primary key (id)
    )
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create table plans (
        active boolean not null,
        display_order integer,
        duration_days integer not null,
        is_popular boolean,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        name varchar(100) not null,
        description varchar(500),
        features json,
        primary key (id)
    )
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id uuid,
        product_id uuid not null
    )
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create table subscriptions (
        auto_renew boolean,
        cancelled_at timestamp(6),
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        end_date timestamp(6) not null,
        next_billing_date timestamp(6),
        start_date timestamp(6) not null,
        updated_at timestamp(6),
        id uuid not null,
        plan_id uuid not null,
        tenant_id uuid,
        vendor_id uuid not null,
        cancelled_reason varchar(255),
        razorpay_order_id varchar(255),
        razorpay_payment_id varchar(255),
        razorpay_subscription_id varchar(255),
        status varchar(255) not null check (status in ('PENDING','ACTIVE','EXPIRED','CANCELLED','SUSPENDED','TRIAL','PAYMENT_FAILED','RENEWAL_PENDING')),
        primary key (id)
    )
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create table templates (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        category varchar(100),
        preview_image varchar(500),
        config JSON,
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer_tenant 
       on customer_addresses (customer_id, tenant_id)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_tenant 
       on customer_addresses (tenant_id)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer 
       on customer_addresses (customer_id)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_slug 
       on pages (slug)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_tenant_slug 
       on pages (tenant_id, slug)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_active 
       on pages (active)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_published 
       on pages (published)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_type 
       on pages (page_type)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_name 
       on templates (name)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_tenant_id 
       on templates (tenant_id)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKsg72b95wtfmuek6xmpk76en5v 
       foreign key (payment_gateway_id) 
       references payment_gateways
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 17:28:48 [main] DEBUG org.hibernate.SQL - 
    alter table if exists subscriptions 
       add constraint FKb1uf5qnxi6uj95se8ykydntl1 
       foreign key (plan_id) 
       references plans
2025-08-29 17:28:48 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:28:49 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 17:28:49 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'pageController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\PageController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'pageService' defined in URL [jar:file:/C:/Users/Adarsh/.m2/repository/com/bharatshop/bharatshop-shared/1.0.0-SNAPSHOT/bharatshop-shared-1.0.0-SNAPSHOT.jar!/com/bharatshop/shared/service/PageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'pageRepository' defined in com.bharatshop.shared.repository.PageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String); Reason: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
2025-08-29 17:28:49 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:28:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:28:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:28:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:28:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:28:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:28:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:28:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:28:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:28:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:28:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:28:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:28:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:28:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:28:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:28:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 17:28:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 17:28:49 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 17:28:49 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 17:28:49 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'pageController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\PageController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'pageService' defined in URL [jar:file:/C:/Users/Adarsh/.m2/repository/com/bharatshop/bharatshop-shared/1.0.0-SNAPSHOT/bharatshop-shared-1.0.0-SNAPSHOT.jar!/com/bharatshop/shared/service/PageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'pageRepository' defined in com.bharatshop.shared.repository.PageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String); Reason: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:29)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'pageService' defined in URL [jar:file:/C:/Users/Adarsh/.m2/repository/com/bharatshop/bharatshop-shared/1.0.0-SNAPSHOT/bharatshop-shared-1.0.0-SNAPSHOT.jar!/com/bharatshop/shared/service/PageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'pageRepository' defined in com.bharatshop.shared.repository.PageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String); Reason: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'pageRepository' defined in com.bharatshop.shared.repository.PageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String); Reason: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String); Reason: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract boolean com.bharatshop.shared.repository.PageRepository.existsBySlug(java.lang.String)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:70)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:60)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:170)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'deleted' of 'com.bharatshop.shared.entity.Page' [SELECT COUNT(p) > 0 FROM Page p WHERE p.slug = :slug AND p.tenantId = :__$synthetic$__1 AND p.deleted = false]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:827)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:732)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy191.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:94)
	... 62 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'deleted' of 'com.bharatshop.shared.entity.Page' [SELECT COUNT(p) > 0 FROM Page p WHERE p.slug = :slug AND p.tenantId = :__$synthetic$__1 AND p.deleted = false]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:87)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:769)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:819)
	... 70 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'deleted' of 'com.bharatshop.shared.entity.Page'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:203)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:196)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:91)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5050)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:4999)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:4974)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathExpression(SemanticQueryBuilder.java:1776)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathExpressionContext.accept(HqlParser.java:7699)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitBarePrimaryExpression(HqlParserBaseVisitor.java:756)
	at org.hibernate.grammars.hql.HqlParser$BarePrimaryExpressionContext.accept(HqlParser.java:7157)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.createComparisonPredicate(SemanticQueryBuilder.java:2429)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:2392)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$ComparisonPredicateContext.accept(HqlParser.java:6164)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:2262)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$AndPredicateContext.accept(HqlParser.java:6039)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:2244)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$WhereClauseContext.accept(HqlParser.java:5905)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1159)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:941)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:1869)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:926)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:1740)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:443)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:402)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:311)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 74 common frames omitted
2025-08-29 17:31:04 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 27360 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 17:31:04 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 17:31:04 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 17:31:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:31:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 17:31:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 163 ms. Found 13 JPA repository interfaces.
2025-08-29 17:31:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:31:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 17:31:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:31:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:31:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2025-08-29 17:31:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 17:31:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 17:31:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 17:31:07 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 17:31:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2339 ms
2025-08-29 17:31:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 17:31:07 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 17:31:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 17:31:07 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 17:31:07 [main] DEBUG c.b.s.filter.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 17:31:07 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 17:31:07 [main] DEBUG c.b.s.f.SessionAuthenticationFilter - Filter 'sessionAuthenticationFilter' configured for use
2025-08-29 17:31:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 17:31:07 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 17:31:07 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 17:31:08 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 17:31:08 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 17:31:09 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create table customer_addresses (
        is_active boolean not null,
        is_default boolean not null,
        created_at timestamp(6) not null,
        customer_id bigint not null,
        id bigint generated by default as identity,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        pincode varchar(10) not null,
        phone varchar(15) not null,
        city varchar(100) not null,
        country varchar(100) not null,
        name varchar(100) not null,
        state varchar(100) not null,
        line1 varchar(255) not null,
        line2 varchar(255),
        primary key (id)
    )
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create table pages (
        active boolean not null,
        published boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        status varchar(50),
        author varchar(100),
        slug varchar(100) not null,
        template varchar(100),
        meta_title varchar(200),
        title varchar(200) not null,
        excerpt varchar(500),
        featured_image varchar(500),
        meta_description varchar(500),
        meta_keywords varchar(1000),
        content TEXT,
        custom_css TEXT,
        custom_js TEXT,
        layout JSON,
        page_type varchar(255) not null check (page_type in ('STATIC','DYNAMIC','LANDING','LEGAL')),
        seo JSON,
        template_id varchar(255),
        primary key (id)
    )
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create table payment_gateways (
        is_active boolean not null,
        is_test_mode boolean not null,
        created_at timestamp(6) not null,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        id uuid not null,
        callback_url varchar(255),
        currency varchar(255) not null,
        gateway_name varchar(255) not null,
        gateway_type varchar(255) not null check (gateway_type in ('RAZORPAY','PAYU','STRIPE','PAYPAL')),
        key_id varchar(255) not null,
        key_secret varchar(255) not null,
        merchant_id varchar(255),
        webhook_secret varchar(255),
        webhook_url varchar(255),
        primary key (id)
    )
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        refund_amount numeric(10,2),
        webhook_verified boolean not null,
        created_at timestamp(6) not null,
        failed_at timestamp(6),
        id bigint generated by default as identity,
        order_id bigint not null,
        paid_at timestamp(6),
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        payment_gateway_id uuid not null,
        currency varchar(255) not null,
        description varchar(255),
        failure_reason varchar(255),
        gateway_response TEXT,
        method varchar(255) check (method in ('CARD','NETBANKING','WALLET','UPI','EMI','PAYLATER')),
        notes TEXT,
        razorpay_order_id varchar(255) unique,
        razorpay_payment_id varchar(255) unique,
        razorpay_signature varchar(255),
        receipt varchar(255),
        refund_id varchar(255),
        status varchar(255) not null check (status in ('CREATED','AUTHORIZED','CAPTURED','REFUNDED','FAILED','CANCELLED')),
        primary key (id)
    )
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create table plans (
        active boolean not null,
        display_order integer,
        duration_days integer not null,
        is_popular boolean,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        name varchar(100) not null,
        description varchar(500),
        features json,
        primary key (id)
    )
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id uuid,
        product_id uuid not null
    )
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create table subscriptions (
        auto_renew boolean,
        cancelled_at timestamp(6),
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        end_date timestamp(6) not null,
        next_billing_date timestamp(6),
        start_date timestamp(6) not null,
        updated_at timestamp(6),
        id uuid not null,
        plan_id uuid not null,
        tenant_id uuid,
        vendor_id uuid not null,
        cancelled_reason varchar(255),
        razorpay_order_id varchar(255),
        razorpay_payment_id varchar(255),
        razorpay_subscription_id varchar(255),
        status varchar(255) not null check (status in ('PENDING','ACTIVE','EXPIRED','CANCELLED','SUSPENDED','TRIAL','PAYMENT_FAILED','RENEWAL_PENDING')),
        primary key (id)
    )
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create table templates (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        category varchar(100),
        preview_image varchar(500),
        config JSON,
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer_tenant 
       on customer_addresses (customer_id, tenant_id)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_tenant 
       on customer_addresses (tenant_id)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer 
       on customer_addresses (customer_id)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_slug 
       on pages (slug)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_tenant_slug 
       on pages (tenant_id, slug)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_active 
       on pages (active)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_published 
       on pages (published)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_type 
       on pages (page_type)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_name 
       on templates (name)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_tenant_id 
       on templates (tenant_id)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKsg72b95wtfmuek6xmpk76en5v 
       foreign key (payment_gateway_id) 
       references payment_gateways
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 17:31:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists subscriptions 
       add constraint FKb1uf5qnxi6uj95se8ykydntl1 
       foreign key (plan_id) 
       references plans
2025-08-29 17:31:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:31:10 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 17:31:11 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'platformAuthController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\PlatformAuthController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'platformAuthService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\PlatformAuthService.class]: Unsatisfied dependency expressed through constructor parameter 3: Error creating bean with name 'authenticationManager' defined in class path resource [com/bharatshop/shared/config/SecurityConfig.class]: Failed to instantiate [org.springframework.security.authentication.AuthenticationManager]: Factory method 'authenticationManager' threw exception with message: Error creating bean with name 'platformAuthService': Requested bean is currently in creation: Is there an unresolvable circular reference?
2025-08-29 17:31:11 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:31:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:31:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:31:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:31:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:31:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:31:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:31:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:31:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:31:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:31:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:31:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:31:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:31:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:31:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:31:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 17:31:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 17:31:11 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 17:31:11 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 17:31:11 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

   platformAuthController defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\PlatformAuthController.class]
???????
|  platformAuthService defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\PlatformAuthService.class]
?     ?
|  authenticationManager defined in class path resource [com/bharatshop/shared/config/SecurityConfig.class]
???????


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

2025-08-29 17:32:12 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 28048 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 17:32:12 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 17:32:12 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 17:32:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:32:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 17:32:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 202 ms. Found 13 JPA repository interfaces.
2025-08-29 17:32:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:32:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 17:32:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:32:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:32:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
2025-08-29 17:32:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 17:32:15 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 17:32:15 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 17:32:15 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 17:32:15 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2700 ms
2025-08-29 17:32:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 17:32:15 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 17:32:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 17:32:15 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 17:32:15 [main] DEBUG c.b.s.filter.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 17:32:15 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 17:32:15 [main] DEBUG c.b.s.f.SessionAuthenticationFilter - Filter 'sessionAuthenticationFilter' configured for use
2025-08-29 17:32:15 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 17:32:15 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 17:32:15 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 17:32:16 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 17:32:16 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 17:32:17 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create table customer_addresses (
        is_active boolean not null,
        is_default boolean not null,
        created_at timestamp(6) not null,
        customer_id bigint not null,
        id bigint generated by default as identity,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        pincode varchar(10) not null,
        phone varchar(15) not null,
        city varchar(100) not null,
        country varchar(100) not null,
        name varchar(100) not null,
        state varchar(100) not null,
        line1 varchar(255) not null,
        line2 varchar(255),
        primary key (id)
    )
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create table pages (
        active boolean not null,
        published boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        status varchar(50),
        author varchar(100),
        slug varchar(100) not null,
        template varchar(100),
        meta_title varchar(200),
        title varchar(200) not null,
        excerpt varchar(500),
        featured_image varchar(500),
        meta_description varchar(500),
        meta_keywords varchar(1000),
        content TEXT,
        custom_css TEXT,
        custom_js TEXT,
        layout JSON,
        page_type varchar(255) not null check (page_type in ('STATIC','DYNAMIC','LANDING','LEGAL')),
        seo JSON,
        template_id varchar(255),
        primary key (id)
    )
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create table payment_gateways (
        is_active boolean not null,
        is_test_mode boolean not null,
        created_at timestamp(6) not null,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        id uuid not null,
        callback_url varchar(255),
        currency varchar(255) not null,
        gateway_name varchar(255) not null,
        gateway_type varchar(255) not null check (gateway_type in ('RAZORPAY','PAYU','STRIPE','PAYPAL')),
        key_id varchar(255) not null,
        key_secret varchar(255) not null,
        merchant_id varchar(255),
        webhook_secret varchar(255),
        webhook_url varchar(255),
        primary key (id)
    )
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        refund_amount numeric(10,2),
        webhook_verified boolean not null,
        created_at timestamp(6) not null,
        failed_at timestamp(6),
        id bigint generated by default as identity,
        order_id bigint not null,
        paid_at timestamp(6),
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        payment_gateway_id uuid not null,
        currency varchar(255) not null,
        description varchar(255),
        failure_reason varchar(255),
        gateway_response TEXT,
        method varchar(255) check (method in ('CARD','NETBANKING','WALLET','UPI','EMI','PAYLATER')),
        notes TEXT,
        razorpay_order_id varchar(255) unique,
        razorpay_payment_id varchar(255) unique,
        razorpay_signature varchar(255),
        receipt varchar(255),
        refund_id varchar(255),
        status varchar(255) not null check (status in ('CREATED','AUTHORIZED','CAPTURED','REFUNDED','FAILED','CANCELLED')),
        primary key (id)
    )
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create table plans (
        active boolean not null,
        display_order integer,
        duration_days integer not null,
        is_popular boolean,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        name varchar(100) not null,
        description varchar(500),
        features json,
        primary key (id)
    )
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id uuid,
        product_id uuid not null
    )
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create table subscriptions (
        auto_renew boolean,
        cancelled_at timestamp(6),
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        end_date timestamp(6) not null,
        next_billing_date timestamp(6),
        start_date timestamp(6) not null,
        updated_at timestamp(6),
        id uuid not null,
        plan_id uuid not null,
        tenant_id uuid,
        vendor_id uuid not null,
        cancelled_reason varchar(255),
        razorpay_order_id varchar(255),
        razorpay_payment_id varchar(255),
        razorpay_subscription_id varchar(255),
        status varchar(255) not null check (status in ('PENDING','ACTIVE','EXPIRED','CANCELLED','SUSPENDED','TRIAL','PAYMENT_FAILED','RENEWAL_PENDING')),
        primary key (id)
    )
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create table templates (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        category varchar(100),
        preview_image varchar(500),
        config JSON,
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer_tenant 
       on customer_addresses (customer_id, tenant_id)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_tenant 
       on customer_addresses (tenant_id)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer 
       on customer_addresses (customer_id)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_slug 
       on pages (slug)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_tenant_slug 
       on pages (tenant_id, slug)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_active 
       on pages (active)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_published 
       on pages (published)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_type 
       on pages (page_type)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_name 
       on templates (name)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_tenant_id 
       on templates (tenant_id)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKsg72b95wtfmuek6xmpk76en5v 
       foreign key (payment_gateway_id) 
       references payment_gateways
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 17:32:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists subscriptions 
       add constraint FKb1uf5qnxi6uj95se8ykydntl1 
       foreign key (plan_id) 
       references plans
2025-08-29 17:32:17 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:32:17 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 17:32:18 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'platformAuthController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\PlatformAuthController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'platformAuthService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\PlatformAuthService.class]: Unsatisfied dependency expressed through constructor parameter 3: Error creating bean with name 'authenticationManager' defined in class path resource [com/bharatshop/shared/config/SecurityConfig.class]: Failed to instantiate [org.springframework.security.authentication.AuthenticationManager]: Factory method 'authenticationManager' threw exception with message: Error creating bean with name 'platformAuthService': Requested bean is currently in creation: Is there an unresolvable circular reference?
2025-08-29 17:32:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:32:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:32:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:32:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:32:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:32:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:32:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:32:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:32:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:32:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:32:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:32:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:32:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:32:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:32:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:32:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 17:32:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 17:32:18 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 17:32:18 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 17:32:18 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

   platformAuthController defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\PlatformAuthController.class]
???????
|  platformAuthService defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\PlatformAuthService.class]
?     ?
|  authenticationManager defined in class path resource [com/bharatshop/shared/config/SecurityConfig.class]
???????


Action:

Despite circular references being allowed, the dependency cycle between beans could not be broken. Update your application to remove the dependency cycle.

2025-08-29 17:33:25 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 22876 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 17:33:25 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 17:33:25 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 17:33:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:33:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 17:33:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 154 ms. Found 13 JPA repository interfaces.
2025-08-29 17:33:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:33:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 17:33:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:33:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:33:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2025-08-29 17:33:28 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 17:33:28 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 17:33:28 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 17:33:28 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 17:33:28 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2424 ms
2025-08-29 17:33:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 17:33:28 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 17:33:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 17:33:28 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 17:33:29 [main] DEBUG c.b.s.filter.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 17:33:29 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 17:33:29 [main] DEBUG c.b.s.f.SessionAuthenticationFilter - Filter 'sessionAuthenticationFilter' configured for use
2025-08-29 17:33:29 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 17:33:29 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 17:33:29 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 17:33:29 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 17:33:29 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 17:33:30 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create table customer_addresses (
        is_active boolean not null,
        is_default boolean not null,
        created_at timestamp(6) not null,
        customer_id bigint not null,
        id bigint generated by default as identity,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        pincode varchar(10) not null,
        phone varchar(15) not null,
        city varchar(100) not null,
        country varchar(100) not null,
        name varchar(100) not null,
        state varchar(100) not null,
        line1 varchar(255) not null,
        line2 varchar(255),
        primary key (id)
    )
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create table pages (
        active boolean not null,
        published boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        status varchar(50),
        author varchar(100),
        slug varchar(100) not null,
        template varchar(100),
        meta_title varchar(200),
        title varchar(200) not null,
        excerpt varchar(500),
        featured_image varchar(500),
        meta_description varchar(500),
        meta_keywords varchar(1000),
        content TEXT,
        custom_css TEXT,
        custom_js TEXT,
        layout JSON,
        page_type varchar(255) not null check (page_type in ('STATIC','DYNAMIC','LANDING','LEGAL')),
        seo JSON,
        template_id varchar(255),
        primary key (id)
    )
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create table payment_gateways (
        is_active boolean not null,
        is_test_mode boolean not null,
        created_at timestamp(6) not null,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        id uuid not null,
        callback_url varchar(255),
        currency varchar(255) not null,
        gateway_name varchar(255) not null,
        gateway_type varchar(255) not null check (gateway_type in ('RAZORPAY','PAYU','STRIPE','PAYPAL')),
        key_id varchar(255) not null,
        key_secret varchar(255) not null,
        merchant_id varchar(255),
        webhook_secret varchar(255),
        webhook_url varchar(255),
        primary key (id)
    )
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        refund_amount numeric(10,2),
        webhook_verified boolean not null,
        created_at timestamp(6) not null,
        failed_at timestamp(6),
        id bigint generated by default as identity,
        order_id bigint not null,
        paid_at timestamp(6),
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        payment_gateway_id uuid not null,
        currency varchar(255) not null,
        description varchar(255),
        failure_reason varchar(255),
        gateway_response TEXT,
        method varchar(255) check (method in ('CARD','NETBANKING','WALLET','UPI','EMI','PAYLATER')),
        notes TEXT,
        razorpay_order_id varchar(255) unique,
        razorpay_payment_id varchar(255) unique,
        razorpay_signature varchar(255),
        receipt varchar(255),
        refund_id varchar(255),
        status varchar(255) not null check (status in ('CREATED','AUTHORIZED','CAPTURED','REFUNDED','FAILED','CANCELLED')),
        primary key (id)
    )
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create table plans (
        active boolean not null,
        display_order integer,
        duration_days integer not null,
        is_popular boolean,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        name varchar(100) not null,
        description varchar(500),
        features json,
        primary key (id)
    )
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id uuid,
        product_id uuid not null
    )
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create table subscriptions (
        auto_renew boolean,
        cancelled_at timestamp(6),
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        end_date timestamp(6) not null,
        next_billing_date timestamp(6),
        start_date timestamp(6) not null,
        updated_at timestamp(6),
        id uuid not null,
        plan_id uuid not null,
        tenant_id uuid,
        vendor_id uuid not null,
        cancelled_reason varchar(255),
        razorpay_order_id varchar(255),
        razorpay_payment_id varchar(255),
        razorpay_subscription_id varchar(255),
        status varchar(255) not null check (status in ('PENDING','ACTIVE','EXPIRED','CANCELLED','SUSPENDED','TRIAL','PAYMENT_FAILED','RENEWAL_PENDING')),
        primary key (id)
    )
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create table templates (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        category varchar(100),
        preview_image varchar(500),
        config JSON,
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer_tenant 
       on customer_addresses (customer_id, tenant_id)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_tenant 
       on customer_addresses (tenant_id)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer 
       on customer_addresses (customer_id)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_slug 
       on pages (slug)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_tenant_slug 
       on pages (tenant_id, slug)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_active 
       on pages (active)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_published 
       on pages (published)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_type 
       on pages (page_type)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_name 
       on templates (name)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_tenant_id 
       on templates (tenant_id)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKsg72b95wtfmuek6xmpk76en5v 
       foreign key (payment_gateway_id) 
       references payment_gateways
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 17:33:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists subscriptions 
       add constraint FKb1uf5qnxi6uj95se8ykydntl1 
       foreign key (plan_id) 
       references plans
2025-08-29 17:33:30 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:33:31 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 17:33:32 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'platformAuthController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\PlatformAuthController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'platformAuthService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\PlatformAuthService.class]: Unsatisfied dependency expressed through constructor parameter 3: Error creating bean with name 'authenticationManager' defined in class path resource [com/bharatshop/shared/config/SecurityConfig.class]: Failed to instantiate [org.springframework.security.authentication.AuthenticationManager]: Factory method 'authenticationManager' threw exception with message: Error creating bean with name 'platformAuthService': Requested bean is currently in creation: Is there an unresolvable circular reference?
2025-08-29 17:33:32 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:33:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:33:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:33:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:33:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:33:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:33:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:33:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:33:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:33:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:33:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:33:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:33:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:33:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:33:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:33:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 17:33:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 17:33:32 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 17:33:32 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 17:33:32 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

   platformAuthController defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\PlatformAuthController.class]
???????
|  platformAuthService defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\PlatformAuthService.class]
?     ?
|  authenticationManager defined in class path resource [com/bharatshop/shared/config/SecurityConfig.class]
???????


Action:

Despite circular references being allowed, the dependency cycle between beans could not be broken. Update your application to remove the dependency cycle.

2025-08-29 17:34:13 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 28648 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 17:34:13 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 17:34:13 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 17:34:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:34:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 17:34:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 153 ms. Found 13 JPA repository interfaces.
2025-08-29 17:34:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:34:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 17:34:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:34:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:34:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
2025-08-29 17:34:16 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 17:34:16 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 17:34:16 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 17:34:16 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 17:34:16 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2441 ms
2025-08-29 17:34:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 17:34:16 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 17:34:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 17:34:16 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 17:34:16 [main] DEBUG c.b.s.filter.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 17:34:16 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 17:34:16 [main] DEBUG c.b.s.f.SessionAuthenticationFilter - Filter 'sessionAuthenticationFilter' configured for use
2025-08-29 17:34:17 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 17:34:17 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 17:34:17 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 17:34:17 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 17:34:17 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 17:34:18 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create table customer_addresses (
        is_active boolean not null,
        is_default boolean not null,
        created_at timestamp(6) not null,
        customer_id bigint not null,
        id bigint generated by default as identity,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        pincode varchar(10) not null,
        phone varchar(15) not null,
        city varchar(100) not null,
        country varchar(100) not null,
        name varchar(100) not null,
        state varchar(100) not null,
        line1 varchar(255) not null,
        line2 varchar(255),
        primary key (id)
    )
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create table pages (
        active boolean not null,
        published boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        status varchar(50),
        author varchar(100),
        slug varchar(100) not null,
        template varchar(100),
        meta_title varchar(200),
        title varchar(200) not null,
        excerpt varchar(500),
        featured_image varchar(500),
        meta_description varchar(500),
        meta_keywords varchar(1000),
        content TEXT,
        custom_css TEXT,
        custom_js TEXT,
        layout JSON,
        page_type varchar(255) not null check (page_type in ('STATIC','DYNAMIC','LANDING','LEGAL')),
        seo JSON,
        template_id varchar(255),
        primary key (id)
    )
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create table payment_gateways (
        is_active boolean not null,
        is_test_mode boolean not null,
        created_at timestamp(6) not null,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        id uuid not null,
        callback_url varchar(255),
        currency varchar(255) not null,
        gateway_name varchar(255) not null,
        gateway_type varchar(255) not null check (gateway_type in ('RAZORPAY','PAYU','STRIPE','PAYPAL')),
        key_id varchar(255) not null,
        key_secret varchar(255) not null,
        merchant_id varchar(255),
        webhook_secret varchar(255),
        webhook_url varchar(255),
        primary key (id)
    )
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        refund_amount numeric(10,2),
        webhook_verified boolean not null,
        created_at timestamp(6) not null,
        failed_at timestamp(6),
        id bigint generated by default as identity,
        order_id bigint not null,
        paid_at timestamp(6),
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        payment_gateway_id uuid not null,
        currency varchar(255) not null,
        description varchar(255),
        failure_reason varchar(255),
        gateway_response TEXT,
        method varchar(255) check (method in ('CARD','NETBANKING','WALLET','UPI','EMI','PAYLATER')),
        notes TEXT,
        razorpay_order_id varchar(255) unique,
        razorpay_payment_id varchar(255) unique,
        razorpay_signature varchar(255),
        receipt varchar(255),
        refund_id varchar(255),
        status varchar(255) not null check (status in ('CREATED','AUTHORIZED','CAPTURED','REFUNDED','FAILED','CANCELLED')),
        primary key (id)
    )
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create table plans (
        active boolean not null,
        display_order integer,
        duration_days integer not null,
        is_popular boolean,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        name varchar(100) not null,
        description varchar(500),
        features json,
        primary key (id)
    )
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id uuid,
        product_id uuid not null
    )
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create table subscriptions (
        auto_renew boolean,
        cancelled_at timestamp(6),
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        end_date timestamp(6) not null,
        next_billing_date timestamp(6),
        start_date timestamp(6) not null,
        updated_at timestamp(6),
        id uuid not null,
        plan_id uuid not null,
        tenant_id uuid,
        vendor_id uuid not null,
        cancelled_reason varchar(255),
        razorpay_order_id varchar(255),
        razorpay_payment_id varchar(255),
        razorpay_subscription_id varchar(255),
        status varchar(255) not null check (status in ('PENDING','ACTIVE','EXPIRED','CANCELLED','SUSPENDED','TRIAL','PAYMENT_FAILED','RENEWAL_PENDING')),
        primary key (id)
    )
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create table templates (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        category varchar(100),
        preview_image varchar(500),
        config JSON,
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer_tenant 
       on customer_addresses (customer_id, tenant_id)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_tenant 
       on customer_addresses (tenant_id)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer 
       on customer_addresses (customer_id)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_slug 
       on pages (slug)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_tenant_slug 
       on pages (tenant_id, slug)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_active 
       on pages (active)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_published 
       on pages (published)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_type 
       on pages (page_type)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_name 
       on templates (name)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_tenant_id 
       on templates (tenant_id)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKsg72b95wtfmuek6xmpk76en5v 
       foreign key (payment_gateway_id) 
       references payment_gateways
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 17:34:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists subscriptions 
       add constraint FKb1uf5qnxi6uj95se8ykydntl1 
       foreign key (plan_id) 
       references plans
2025-08-29 17:34:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:34:19 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 17:34:20 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productImageController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\ProductImageController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productImageService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\ProductImageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productImageRepository' defined in com.bharatshop.shared.repository.ProductImageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID); Reason: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
2025-08-29 17:34:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:34:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:34:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:34:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:34:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:34:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:34:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:34:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:34:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:34:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:34:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:34:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:34:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:34:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:34:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:34:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 17:34:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 17:34:20 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 17:34:20 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 17:34:20 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productImageController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\ProductImageController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productImageService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\ProductImageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productImageRepository' defined in com.bharatshop.shared.repository.ProductImageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID); Reason: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:29)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productImageService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\ProductImageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productImageRepository' defined in com.bharatshop.shared.repository.ProductImageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID); Reason: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productImageRepository' defined in com.bharatshop.shared.repository.ProductImageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID); Reason: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID); Reason: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:70)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:60)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:170)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.ProductImage' [UPDATE ProductImage pi SET pi.isDeleted = true WHERE pi.productId = :productId]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:827)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:732)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy191.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:94)
	... 62 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.ProductImage' [UPDATE ProductImage pi SET pi.isDeleted = true WHERE pi.productId = :productId]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:87)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:769)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:819)
	... 70 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.ProductImage'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:203)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:196)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:91)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5050)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$SimplePathContext.accept(HqlParser.java:4130)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.consumeDomainPath(SemanticQueryBuilder.java:5297)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitUpdateStatement(SemanticQueryBuilder.java:582)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:410)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:311)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 74 common frames omitted
2025-08-29 17:36:22 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 26340 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 17:36:22 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 17:36:22 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 17:36:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:36:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 17:36:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 166 ms. Found 13 JPA repository interfaces.
2025-08-29 17:36:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:36:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 17:36:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:36:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:36:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2025-08-29 17:36:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 17:36:24 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 17:36:24 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 17:36:24 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 17:36:24 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2449 ms
2025-08-29 17:36:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 17:36:25 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 17:36:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 17:36:25 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 17:36:25 [main] DEBUG c.b.s.filter.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 17:36:25 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 17:36:25 [main] DEBUG c.b.s.f.SessionAuthenticationFilter - Filter 'sessionAuthenticationFilter' configured for use
2025-08-29 17:36:25 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 17:36:25 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 17:36:25 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 17:36:26 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 17:36:26 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 17:36:27 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create table customer_addresses (
        is_active boolean not null,
        is_default boolean not null,
        created_at timestamp(6) not null,
        customer_id bigint not null,
        id bigint generated by default as identity,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        pincode varchar(10) not null,
        phone varchar(15) not null,
        city varchar(100) not null,
        country varchar(100) not null,
        name varchar(100) not null,
        state varchar(100) not null,
        line1 varchar(255) not null,
        line2 varchar(255),
        primary key (id)
    )
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create table pages (
        active boolean not null,
        published boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        status varchar(50),
        author varchar(100),
        slug varchar(100) not null,
        template varchar(100),
        meta_title varchar(200),
        title varchar(200) not null,
        excerpt varchar(500),
        featured_image varchar(500),
        meta_description varchar(500),
        meta_keywords varchar(1000),
        content TEXT,
        custom_css TEXT,
        custom_js TEXT,
        layout JSON,
        page_type varchar(255) not null check (page_type in ('STATIC','DYNAMIC','LANDING','LEGAL')),
        seo JSON,
        template_id varchar(255),
        primary key (id)
    )
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create table payment_gateways (
        is_active boolean not null,
        is_test_mode boolean not null,
        created_at timestamp(6) not null,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        id uuid not null,
        callback_url varchar(255),
        currency varchar(255) not null,
        gateway_name varchar(255) not null,
        gateway_type varchar(255) not null check (gateway_type in ('RAZORPAY','PAYU','STRIPE','PAYPAL')),
        key_id varchar(255) not null,
        key_secret varchar(255) not null,
        merchant_id varchar(255),
        webhook_secret varchar(255),
        webhook_url varchar(255),
        primary key (id)
    )
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        refund_amount numeric(10,2),
        webhook_verified boolean not null,
        created_at timestamp(6) not null,
        failed_at timestamp(6),
        id bigint generated by default as identity,
        order_id bigint not null,
        paid_at timestamp(6),
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        payment_gateway_id uuid not null,
        currency varchar(255) not null,
        description varchar(255),
        failure_reason varchar(255),
        gateway_response TEXT,
        method varchar(255) check (method in ('CARD','NETBANKING','WALLET','UPI','EMI','PAYLATER')),
        notes TEXT,
        razorpay_order_id varchar(255) unique,
        razorpay_payment_id varchar(255) unique,
        razorpay_signature varchar(255),
        receipt varchar(255),
        refund_id varchar(255),
        status varchar(255) not null check (status in ('CREATED','AUTHORIZED','CAPTURED','REFUNDED','FAILED','CANCELLED')),
        primary key (id)
    )
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create table plans (
        active boolean not null,
        display_order integer,
        duration_days integer not null,
        is_popular boolean,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        name varchar(100) not null,
        description varchar(500),
        features json,
        primary key (id)
    )
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id uuid,
        product_id uuid not null
    )
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create table subscriptions (
        auto_renew boolean,
        cancelled_at timestamp(6),
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        end_date timestamp(6) not null,
        next_billing_date timestamp(6),
        start_date timestamp(6) not null,
        updated_at timestamp(6),
        id uuid not null,
        plan_id uuid not null,
        tenant_id uuid,
        vendor_id uuid not null,
        cancelled_reason varchar(255),
        razorpay_order_id varchar(255),
        razorpay_payment_id varchar(255),
        razorpay_subscription_id varchar(255),
        status varchar(255) not null check (status in ('PENDING','ACTIVE','EXPIRED','CANCELLED','SUSPENDED','TRIAL','PAYMENT_FAILED','RENEWAL_PENDING')),
        primary key (id)
    )
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create table templates (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        category varchar(100),
        preview_image varchar(500),
        config JSON,
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer_tenant 
       on customer_addresses (customer_id, tenant_id)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_tenant 
       on customer_addresses (tenant_id)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer 
       on customer_addresses (customer_id)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_slug 
       on pages (slug)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_tenant_slug 
       on pages (tenant_id, slug)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_active 
       on pages (active)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_published 
       on pages (published)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_type 
       on pages (page_type)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_name 
       on templates (name)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_tenant_id 
       on templates (tenant_id)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKsg72b95wtfmuek6xmpk76en5v 
       foreign key (payment_gateway_id) 
       references payment_gateways
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 17:36:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists subscriptions 
       add constraint FKb1uf5qnxi6uj95se8ykydntl1 
       foreign key (plan_id) 
       references plans
2025-08-29 17:36:27 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:36:27 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 17:36:29 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productImageController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\ProductImageController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productImageService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\ProductImageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productImageRepository' defined in com.bharatshop.shared.repository.ProductImageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID); Reason: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
2025-08-29 17:36:29 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:36:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:36:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:36:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:36:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:36:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:36:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:36:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:36:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:36:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:36:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:36:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:36:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:36:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:36:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:36:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 17:36:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 17:36:29 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 17:36:29 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 17:36:29 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productImageController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\ProductImageController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productImageService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\ProductImageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productImageRepository' defined in com.bharatshop.shared.repository.ProductImageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID); Reason: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:29)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productImageService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\ProductImageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productImageRepository' defined in com.bharatshop.shared.repository.ProductImageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID); Reason: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productImageRepository' defined in com.bharatshop.shared.repository.ProductImageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID); Reason: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID); Reason: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:70)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:60)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:170)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.ProductImage' [UPDATE ProductImage pi SET pi.isDeleted = true WHERE pi.productId = :productId]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:827)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:732)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy191.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:94)
	... 62 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.ProductImage' [UPDATE ProductImage pi SET pi.isDeleted = true WHERE pi.productId = :productId]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:87)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:769)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:819)
	... 70 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.ProductImage'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:203)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:196)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:91)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5050)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$SimplePathContext.accept(HqlParser.java:4130)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.consumeDomainPath(SemanticQueryBuilder.java:5297)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitUpdateStatement(SemanticQueryBuilder.java:582)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:410)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:311)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 74 common frames omitted
2025-08-29 17:38:41 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 1660 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 17:38:41 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 17:38:41 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 17:38:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:38:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 17:38:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 182 ms. Found 13 JPA repository interfaces.
2025-08-29 17:38:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:38:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 17:38:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:38:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:38:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2025-08-29 17:38:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 17:38:43 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 17:38:43 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 17:38:43 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 17:38:43 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2446 ms
2025-08-29 17:38:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 17:38:44 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 17:38:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 17:38:44 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 17:38:44 [main] DEBUG c.b.s.filter.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 17:38:44 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 17:38:44 [main] DEBUG c.b.s.f.SessionAuthenticationFilter - Filter 'sessionAuthenticationFilter' configured for use
2025-08-29 17:38:44 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 17:38:44 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 17:38:44 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 17:38:44 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 17:38:45 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 17:38:46 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create table customer_addresses (
        is_active boolean not null,
        is_default boolean not null,
        created_at timestamp(6) not null,
        customer_id bigint not null,
        id bigint generated by default as identity,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        pincode varchar(10) not null,
        phone varchar(15) not null,
        city varchar(100) not null,
        country varchar(100) not null,
        name varchar(100) not null,
        state varchar(100) not null,
        line1 varchar(255) not null,
        line2 varchar(255),
        primary key (id)
    )
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create table pages (
        active boolean not null,
        published boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        status varchar(50),
        author varchar(100),
        slug varchar(100) not null,
        template varchar(100),
        meta_title varchar(200),
        title varchar(200) not null,
        excerpt varchar(500),
        featured_image varchar(500),
        meta_description varchar(500),
        meta_keywords varchar(1000),
        content TEXT,
        custom_css TEXT,
        custom_js TEXT,
        layout JSON,
        page_type varchar(255) not null check (page_type in ('STATIC','DYNAMIC','LANDING','LEGAL')),
        seo JSON,
        template_id varchar(255),
        primary key (id)
    )
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create table payment_gateways (
        is_active boolean not null,
        is_test_mode boolean not null,
        created_at timestamp(6) not null,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        id uuid not null,
        callback_url varchar(255),
        currency varchar(255) not null,
        gateway_name varchar(255) not null,
        gateway_type varchar(255) not null check (gateway_type in ('RAZORPAY','PAYU','STRIPE','PAYPAL')),
        key_id varchar(255) not null,
        key_secret varchar(255) not null,
        merchant_id varchar(255),
        webhook_secret varchar(255),
        webhook_url varchar(255),
        primary key (id)
    )
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        refund_amount numeric(10,2),
        webhook_verified boolean not null,
        created_at timestamp(6) not null,
        failed_at timestamp(6),
        id bigint generated by default as identity,
        order_id bigint not null,
        paid_at timestamp(6),
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        payment_gateway_id uuid not null,
        currency varchar(255) not null,
        description varchar(255),
        failure_reason varchar(255),
        gateway_response TEXT,
        method varchar(255) check (method in ('CARD','NETBANKING','WALLET','UPI','EMI','PAYLATER')),
        notes TEXT,
        razorpay_order_id varchar(255) unique,
        razorpay_payment_id varchar(255) unique,
        razorpay_signature varchar(255),
        receipt varchar(255),
        refund_id varchar(255),
        status varchar(255) not null check (status in ('CREATED','AUTHORIZED','CAPTURED','REFUNDED','FAILED','CANCELLED')),
        primary key (id)
    )
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create table plans (
        active boolean not null,
        display_order integer,
        duration_days integer not null,
        is_popular boolean,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        name varchar(100) not null,
        description varchar(500),
        features json,
        primary key (id)
    )
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id uuid,
        product_id uuid not null
    )
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create table subscriptions (
        auto_renew boolean,
        cancelled_at timestamp(6),
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        end_date timestamp(6) not null,
        next_billing_date timestamp(6),
        start_date timestamp(6) not null,
        updated_at timestamp(6),
        id uuid not null,
        plan_id uuid not null,
        tenant_id uuid,
        vendor_id uuid not null,
        cancelled_reason varchar(255),
        razorpay_order_id varchar(255),
        razorpay_payment_id varchar(255),
        razorpay_subscription_id varchar(255),
        status varchar(255) not null check (status in ('PENDING','ACTIVE','EXPIRED','CANCELLED','SUSPENDED','TRIAL','PAYMENT_FAILED','RENEWAL_PENDING')),
        primary key (id)
    )
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create table templates (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        category varchar(100),
        preview_image varchar(500),
        config JSON,
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer_tenant 
       on customer_addresses (customer_id, tenant_id)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_tenant 
       on customer_addresses (tenant_id)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer 
       on customer_addresses (customer_id)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_slug 
       on pages (slug)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_tenant_slug 
       on pages (tenant_id, slug)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_active 
       on pages (active)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_published 
       on pages (published)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_type 
       on pages (page_type)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_name 
       on templates (name)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_tenant_id 
       on templates (tenant_id)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKsg72b95wtfmuek6xmpk76en5v 
       foreign key (payment_gateway_id) 
       references payment_gateways
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 17:38:46 [main] DEBUG org.hibernate.SQL - 
    alter table if exists subscriptions 
       add constraint FKb1uf5qnxi6uj95se8ykydntl1 
       foreign key (plan_id) 
       references plans
2025-08-29 17:38:46 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:38:46 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 17:38:48 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productImageController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\ProductImageController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productImageService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\ProductImageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productImageRepository' defined in com.bharatshop.shared.repository.ProductImageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID); Reason: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
2025-08-29 17:38:48 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:38:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:38:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:38:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:38:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:38:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:38:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:38:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:38:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:38:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:38:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:38:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:38:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:38:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:38:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:38:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 17:38:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 17:38:48 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 17:38:48 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 17:38:48 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productImageController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\ProductImageController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productImageService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\ProductImageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productImageRepository' defined in com.bharatshop.shared.repository.ProductImageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID); Reason: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:29)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productImageService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\ProductImageService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'productImageRepository' defined in com.bharatshop.shared.repository.ProductImageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID); Reason: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productImageRepository' defined in com.bharatshop.shared.repository.ProductImageRepository defined in @EnableJpaRepositories declared on PlatformApplication: Could not create query for public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID); Reason: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID); Reason: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract void com.bharatshop.shared.repository.ProductImageRepository.deleteByProductId(java.util.UUID)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:70)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:60)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:170)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.ProductImage' [UPDATE ProductImage pi SET pi.isDeleted = true WHERE pi.productId = :productId]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:827)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:732)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:133)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy191.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:94)
	... 62 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.ProductImage' [UPDATE ProductImage pi SET pi.isDeleted = true WHERE pi.productId = :productId]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:87)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:769)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:819)
	... 70 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'isDeleted' of 'com.bharatshop.shared.entity.ProductImage'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:203)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:196)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:91)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5050)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:269)
	at org.hibernate.grammars.hql.HqlParser$SimplePathContext.accept(HqlParser.java:4130)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.consumeDomainPath(SemanticQueryBuilder.java:5297)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitUpdateStatement(SemanticQueryBuilder.java:582)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:410)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:311)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 74 common frames omitted
2025-08-29 17:40:05 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 18004 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 17:40:05 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 17:40:05 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 17:40:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:40:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 17:40:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 170 ms. Found 13 JPA repository interfaces.
2025-08-29 17:40:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:40:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 17:40:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:40:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:40:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2025-08-29 17:40:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 17:40:08 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 17:40:08 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 17:40:08 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 17:40:08 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2421 ms
2025-08-29 17:40:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 17:40:08 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 17:40:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 17:40:08 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 17:40:08 [main] DEBUG c.b.s.filter.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 17:40:08 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 17:40:08 [main] DEBUG c.b.s.f.SessionAuthenticationFilter - Filter 'sessionAuthenticationFilter' configured for use
2025-08-29 17:40:08 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 17:40:08 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 17:40:08 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 17:40:09 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 17:40:09 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 17:40:10 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create table customer_addresses (
        is_active boolean not null,
        is_default boolean not null,
        created_at timestamp(6) not null,
        customer_id bigint not null,
        id bigint generated by default as identity,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        pincode varchar(10) not null,
        phone varchar(15) not null,
        city varchar(100) not null,
        country varchar(100) not null,
        name varchar(100) not null,
        state varchar(100) not null,
        line1 varchar(255) not null,
        line2 varchar(255),
        primary key (id)
    )
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create table pages (
        active boolean not null,
        published boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        status varchar(50),
        author varchar(100),
        slug varchar(100) not null,
        template varchar(100),
        meta_title varchar(200),
        title varchar(200) not null,
        excerpt varchar(500),
        featured_image varchar(500),
        meta_description varchar(500),
        meta_keywords varchar(1000),
        content TEXT,
        custom_css TEXT,
        custom_js TEXT,
        layout JSON,
        page_type varchar(255) not null check (page_type in ('STATIC','DYNAMIC','LANDING','LEGAL')),
        seo JSON,
        template_id varchar(255),
        primary key (id)
    )
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create table payment_gateways (
        is_active boolean not null,
        is_test_mode boolean not null,
        created_at timestamp(6) not null,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        id uuid not null,
        callback_url varchar(255),
        currency varchar(255) not null,
        gateway_name varchar(255) not null,
        gateway_type varchar(255) not null check (gateway_type in ('RAZORPAY','PAYU','STRIPE','PAYPAL')),
        key_id varchar(255) not null,
        key_secret varchar(255) not null,
        merchant_id varchar(255),
        webhook_secret varchar(255),
        webhook_url varchar(255),
        primary key (id)
    )
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        refund_amount numeric(10,2),
        webhook_verified boolean not null,
        created_at timestamp(6) not null,
        failed_at timestamp(6),
        id bigint generated by default as identity,
        order_id bigint not null,
        paid_at timestamp(6),
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        payment_gateway_id uuid not null,
        currency varchar(255) not null,
        description varchar(255),
        failure_reason varchar(255),
        gateway_response TEXT,
        method varchar(255) check (method in ('CARD','NETBANKING','WALLET','UPI','EMI','PAYLATER')),
        notes TEXT,
        razorpay_order_id varchar(255) unique,
        razorpay_payment_id varchar(255) unique,
        razorpay_signature varchar(255),
        receipt varchar(255),
        refund_id varchar(255),
        status varchar(255) not null check (status in ('CREATED','AUTHORIZED','CAPTURED','REFUNDED','FAILED','CANCELLED')),
        primary key (id)
    )
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create table plans (
        active boolean not null,
        display_order integer,
        duration_days integer not null,
        is_popular boolean,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        name varchar(100) not null,
        description varchar(500),
        features json,
        primary key (id)
    )
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id uuid,
        product_id uuid not null
    )
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create table subscriptions (
        auto_renew boolean,
        cancelled_at timestamp(6),
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        end_date timestamp(6) not null,
        next_billing_date timestamp(6),
        start_date timestamp(6) not null,
        updated_at timestamp(6),
        id uuid not null,
        plan_id uuid not null,
        tenant_id uuid,
        vendor_id uuid not null,
        cancelled_reason varchar(255),
        razorpay_order_id varchar(255),
        razorpay_payment_id varchar(255),
        razorpay_subscription_id varchar(255),
        status varchar(255) not null check (status in ('PENDING','ACTIVE','EXPIRED','CANCELLED','SUSPENDED','TRIAL','PAYMENT_FAILED','RENEWAL_PENDING')),
        primary key (id)
    )
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create table templates (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        category varchar(100),
        preview_image varchar(500),
        config JSON,
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer_tenant 
       on customer_addresses (customer_id, tenant_id)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_tenant 
       on customer_addresses (tenant_id)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer 
       on customer_addresses (customer_id)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_slug 
       on pages (slug)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_tenant_slug 
       on pages (tenant_id, slug)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_active 
       on pages (active)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_published 
       on pages (published)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_type 
       on pages (page_type)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_name 
       on templates (name)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_tenant_id 
       on templates (tenant_id)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKsg72b95wtfmuek6xmpk76en5v 
       foreign key (payment_gateway_id) 
       references payment_gateways
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 17:40:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists subscriptions 
       add constraint FKb1uf5qnxi6uj95se8ykydntl1 
       foreign key (plan_id) 
       references plans
2025-08-29 17:40:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:40:11 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 17:40:12 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tenantController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\TenantController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'tenantService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\TenantService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'tenantRepository' defined in com.bharatshop.platform.repository.TenantRepository defined in @EnableJpaRepositories declared on PlatformApplication: Not a managed type: class com.bharatshop.platform.model.Tenant
2025-08-29 17:40:12 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:40:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:40:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:40:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:40:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:40:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:40:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:40:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:40:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:40:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:40:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:40:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:40:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:40:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:40:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:40:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 17:40:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 17:40:12 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 17:40:12 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 17:40:12 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tenantController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\TenantController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'tenantService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\TenantService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'tenantRepository' defined in com.bharatshop.platform.repository.TenantRepository defined in @EnableJpaRepositories declared on PlatformApplication: Not a managed type: class com.bharatshop.platform.model.Tenant
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:29)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tenantService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\TenantService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'tenantRepository' defined in com.bharatshop.platform.repository.TenantRepository defined in @EnableJpaRepositories declared on PlatformApplication: Not a managed type: class com.bharatshop.platform.model.Tenant
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tenantRepository' defined in com.bharatshop.platform.repository.TenantRepository defined in @EnableJpaRepositories declared on PlatformApplication: Not a managed type: class com.bharatshop.platform.model.Tenant
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 33 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.bharatshop.platform.model.Tenant
	at org.hibernate.metamodel.model.domain.internal.JpaMetamodelImpl.managedType(JpaMetamodelImpl.java:193)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.managedType(MappingMetamodelImpl.java:468)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.managedType(MappingMetamodelImpl.java:98)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:82)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:69)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:246)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:211)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:194)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:81)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:317)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
2025-08-29 17:40:59 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 26744 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 17:40:59 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 17:40:59 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 17:40:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:40:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 17:41:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 159 ms. Found 13 JPA repository interfaces.
2025-08-29 17:41:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:41:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 17:41:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:41:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:41:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2025-08-29 17:41:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 17:41:01 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 17:41:01 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 17:41:01 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 17:41:01 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2380 ms
2025-08-29 17:41:01 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 17:41:01 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 17:41:01 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 17:41:01 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 17:41:01 [main] DEBUG c.b.s.filter.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 17:41:01 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 17:41:01 [main] DEBUG c.b.s.f.SessionAuthenticationFilter - Filter 'sessionAuthenticationFilter' configured for use
2025-08-29 17:41:02 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 17:41:02 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 17:41:02 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 17:41:02 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 17:41:02 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 17:41:03 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create table customer_addresses (
        is_active boolean not null,
        is_default boolean not null,
        created_at timestamp(6) not null,
        customer_id bigint not null,
        id bigint generated by default as identity,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        pincode varchar(10) not null,
        phone varchar(15) not null,
        city varchar(100) not null,
        country varchar(100) not null,
        name varchar(100) not null,
        state varchar(100) not null,
        line1 varchar(255) not null,
        line2 varchar(255),
        primary key (id)
    )
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create table pages (
        active boolean not null,
        published boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        status varchar(50),
        author varchar(100),
        slug varchar(100) not null,
        template varchar(100),
        meta_title varchar(200),
        title varchar(200) not null,
        excerpt varchar(500),
        featured_image varchar(500),
        meta_description varchar(500),
        meta_keywords varchar(1000),
        content TEXT,
        custom_css TEXT,
        custom_js TEXT,
        layout JSON,
        page_type varchar(255) not null check (page_type in ('STATIC','DYNAMIC','LANDING','LEGAL')),
        seo JSON,
        template_id varchar(255),
        primary key (id)
    )
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create table payment_gateways (
        is_active boolean not null,
        is_test_mode boolean not null,
        created_at timestamp(6) not null,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        id uuid not null,
        callback_url varchar(255),
        currency varchar(255) not null,
        gateway_name varchar(255) not null,
        gateway_type varchar(255) not null check (gateway_type in ('RAZORPAY','PAYU','STRIPE','PAYPAL')),
        key_id varchar(255) not null,
        key_secret varchar(255) not null,
        merchant_id varchar(255),
        webhook_secret varchar(255),
        webhook_url varchar(255),
        primary key (id)
    )
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        refund_amount numeric(10,2),
        webhook_verified boolean not null,
        created_at timestamp(6) not null,
        failed_at timestamp(6),
        id bigint generated by default as identity,
        order_id bigint not null,
        paid_at timestamp(6),
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        payment_gateway_id uuid not null,
        currency varchar(255) not null,
        description varchar(255),
        failure_reason varchar(255),
        gateway_response TEXT,
        method varchar(255) check (method in ('CARD','NETBANKING','WALLET','UPI','EMI','PAYLATER')),
        notes TEXT,
        razorpay_order_id varchar(255) unique,
        razorpay_payment_id varchar(255) unique,
        razorpay_signature varchar(255),
        receipt varchar(255),
        refund_id varchar(255),
        status varchar(255) not null check (status in ('CREATED','AUTHORIZED','CAPTURED','REFUNDED','FAILED','CANCELLED')),
        primary key (id)
    )
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create table plans (
        active boolean not null,
        display_order integer,
        duration_days integer not null,
        is_popular boolean,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        name varchar(100) not null,
        description varchar(500),
        features json,
        primary key (id)
    )
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id uuid,
        product_id uuid not null
    )
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create table subscriptions (
        auto_renew boolean,
        cancelled_at timestamp(6),
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        end_date timestamp(6) not null,
        next_billing_date timestamp(6),
        start_date timestamp(6) not null,
        updated_at timestamp(6),
        id uuid not null,
        plan_id uuid not null,
        tenant_id uuid,
        vendor_id uuid not null,
        cancelled_reason varchar(255),
        razorpay_order_id varchar(255),
        razorpay_payment_id varchar(255),
        razorpay_subscription_id varchar(255),
        status varchar(255) not null check (status in ('PENDING','ACTIVE','EXPIRED','CANCELLED','SUSPENDED','TRIAL','PAYMENT_FAILED','RENEWAL_PENDING')),
        primary key (id)
    )
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create table templates (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        category varchar(100),
        preview_image varchar(500),
        config JSON,
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer_tenant 
       on customer_addresses (customer_id, tenant_id)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_tenant 
       on customer_addresses (tenant_id)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer 
       on customer_addresses (customer_id)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_slug 
       on pages (slug)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_tenant_slug 
       on pages (tenant_id, slug)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_active 
       on pages (active)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_published 
       on pages (published)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_type 
       on pages (page_type)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_name 
       on templates (name)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_tenant_id 
       on templates (tenant_id)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKsg72b95wtfmuek6xmpk76en5v 
       foreign key (payment_gateway_id) 
       references payment_gateways
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 17:41:03 [main] DEBUG org.hibernate.SQL - 
    alter table if exists subscriptions 
       add constraint FKb1uf5qnxi6uj95se8ykydntl1 
       foreign key (plan_id) 
       references plans
2025-08-29 17:41:03 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:41:04 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 17:41:05 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tenantController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\TenantController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'tenantService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\TenantService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'tenantRepository' defined in com.bharatshop.platform.repository.TenantRepository defined in @EnableJpaRepositories declared on PlatformApplication: Not a managed type: class com.bharatshop.platform.model.Tenant
2025-08-29 17:41:05 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:41:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:41:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:41:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:41:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:41:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:41:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:41:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:41:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:41:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:41:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:41:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:41:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:41:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:41:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:41:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 17:41:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 17:41:05 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-29 17:41:05 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 17:41:05 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tenantController' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\controller\TenantController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'tenantService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\TenantService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'tenantRepository' defined in com.bharatshop.platform.repository.TenantRepository defined in @EnableJpaRepositories declared on PlatformApplication: Not a managed type: class com.bharatshop.platform.model.Tenant
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.bharatshop.platform.PlatformApplication.main(PlatformApplication.java:29)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tenantService' defined in file [C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes\com\bharatshop\platform\service\TenantService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'tenantRepository' defined in com.bharatshop.platform.repository.TenantRepository defined in @EnableJpaRepositories declared on PlatformApplication: Not a managed type: class com.bharatshop.platform.model.Tenant
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tenantRepository' defined in com.bharatshop.platform.repository.TenantRepository defined in @EnableJpaRepositories declared on PlatformApplication: Not a managed type: class com.bharatshop.platform.model.Tenant
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 33 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.bharatshop.platform.model.Tenant
	at org.hibernate.metamodel.model.domain.internal.JpaMetamodelImpl.managedType(JpaMetamodelImpl.java:193)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.managedType(MappingMetamodelImpl.java:468)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.managedType(MappingMetamodelImpl.java:98)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:82)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:69)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:246)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:211)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:194)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:81)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:317)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
2025-08-29 17:42:34 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 16320 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 17:42:34 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 17:42:34 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 17:42:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:42:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 17:42:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 199 ms. Found 13 JPA repository interfaces.
2025-08-29 17:42:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:42:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 17:42:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:42:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:42:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2025-08-29 17:42:37 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 17:42:37 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 17:42:37 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 17:42:37 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 17:42:37 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2661 ms
2025-08-29 17:42:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 17:42:37 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 17:42:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 17:42:37 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 17:42:37 [main] DEBUG c.b.s.filter.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 17:42:37 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 17:42:37 [main] DEBUG c.b.s.f.SessionAuthenticationFilter - Filter 'sessionAuthenticationFilter' configured for use
2025-08-29 17:42:37 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 17:42:38 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 17:42:38 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 17:42:38 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 17:42:38 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 17:42:39 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tenants cascade 
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create table customer_addresses (
        is_active boolean not null,
        is_default boolean not null,
        created_at timestamp(6) not null,
        customer_id bigint not null,
        id bigint generated by default as identity,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        pincode varchar(10) not null,
        phone varchar(15) not null,
        city varchar(100) not null,
        country varchar(100) not null,
        name varchar(100) not null,
        state varchar(100) not null,
        line1 varchar(255) not null,
        line2 varchar(255),
        primary key (id)
    )
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create table pages (
        active boolean not null,
        published boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        status varchar(50),
        author varchar(100),
        slug varchar(100) not null,
        template varchar(100),
        meta_title varchar(200),
        title varchar(200) not null,
        excerpt varchar(500),
        featured_image varchar(500),
        meta_description varchar(500),
        meta_keywords varchar(1000),
        content TEXT,
        custom_css TEXT,
        custom_js TEXT,
        layout JSON,
        page_type varchar(255) not null check (page_type in ('STATIC','DYNAMIC','LANDING','LEGAL')),
        seo JSON,
        template_id varchar(255),
        primary key (id)
    )
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create table payment_gateways (
        is_active boolean not null,
        is_test_mode boolean not null,
        created_at timestamp(6) not null,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        id uuid not null,
        callback_url varchar(255),
        currency varchar(255) not null,
        gateway_name varchar(255) not null,
        gateway_type varchar(255) not null check (gateway_type in ('RAZORPAY','PAYU','STRIPE','PAYPAL')),
        key_id varchar(255) not null,
        key_secret varchar(255) not null,
        merchant_id varchar(255),
        webhook_secret varchar(255),
        webhook_url varchar(255),
        primary key (id)
    )
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        refund_amount numeric(10,2),
        webhook_verified boolean not null,
        created_at timestamp(6) not null,
        failed_at timestamp(6),
        id bigint generated by default as identity,
        order_id bigint not null,
        paid_at timestamp(6),
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        payment_gateway_id uuid not null,
        currency varchar(255) not null,
        description varchar(255),
        failure_reason varchar(255),
        gateway_response TEXT,
        method varchar(255) check (method in ('CARD','NETBANKING','WALLET','UPI','EMI','PAYLATER')),
        notes TEXT,
        razorpay_order_id varchar(255) unique,
        razorpay_payment_id varchar(255) unique,
        razorpay_signature varchar(255),
        receipt varchar(255),
        refund_id varchar(255),
        status varchar(255) not null check (status in ('CREATED','AUTHORIZED','CAPTURED','REFUNDED','FAILED','CANCELLED')),
        primary key (id)
    )
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create table plans (
        active boolean not null,
        display_order integer,
        duration_days integer not null,
        is_popular boolean,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        name varchar(100) not null,
        description varchar(500),
        features json,
        primary key (id)
    )
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id uuid,
        product_id uuid not null
    )
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create table subscriptions (
        auto_renew boolean,
        cancelled_at timestamp(6),
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        end_date timestamp(6) not null,
        next_billing_date timestamp(6),
        start_date timestamp(6) not null,
        updated_at timestamp(6),
        id uuid not null,
        plan_id uuid not null,
        tenant_id uuid,
        vendor_id uuid not null,
        cancelled_reason varchar(255),
        razorpay_order_id varchar(255),
        razorpay_payment_id varchar(255),
        razorpay_subscription_id varchar(255),
        status varchar(255) not null check (status in ('PENDING','ACTIVE','EXPIRED','CANCELLED','SUSPENDED','TRIAL','PAYMENT_FAILED','RENEWAL_PENDING')),
        primary key (id)
    )
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create table templates (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        category varchar(100),
        preview_image varchar(500),
        config JSON,
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create table tenants (
        active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        code varchar(50) not null unique,
        name varchar(100) not null unique,
        description varchar(500),
        primary key (id)
    )
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer_tenant 
       on customer_addresses (customer_id, tenant_id)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_tenant 
       on customer_addresses (tenant_id)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer 
       on customer_addresses (customer_id)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_slug 
       on pages (slug)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_tenant_slug 
       on pages (tenant_id, slug)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_active 
       on pages (active)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_published 
       on pages (published)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_type 
       on pages (page_type)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_name 
       on templates (name)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_tenant_id 
       on templates (tenant_id)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_tenant_active 
       on tenants (active)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKsg72b95wtfmuek6xmpk76en5v 
       foreign key (payment_gateway_id) 
       references payment_gateways
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 17:42:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists subscriptions 
       add constraint FKb1uf5qnxi6uj95se8ykydntl1 
       foreign key (plan_id) 
       references plans
2025-08-29 17:42:39 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:42:40 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 17:42:41 [main] INFO  c.b.shared.config.RazorpayConfig - Initializing Razorpay client with key: rzp_test_key
2025-08-29 17:42:42 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-08-29 17:42:42 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-29 17:42:43 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 85 mappings in 'requestMappingHandlerMapping'
2025-08-29 17:42:43 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-29 17:42:43 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7eab694, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@203e1e6f, org.springframework.security.web.context.SecurityContextHolderFilter@3d656154, org.springframework.security.web.header.HeaderWriterFilter@7f5a6622, org.springframework.web.filter.CorsFilter@1c5918bc, org.springframework.security.web.authentication.logout.LogoutFilter@64d4fde6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@37b23736, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@33665e66, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@35471343, org.springframework.security.web.session.SessionManagementFilter@7319b772, org.springframework.security.web.access.ExceptionTranslationFilter@5d01690, org.springframework.security.web.access.intercept.AuthorizationFilter@51e74653]
2025-08-29 17:42:43 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Or [Mvc [pattern='/api/platform/**']] with [org.springframework.security.web.session.DisableEncodeUrlFilter@6009b817, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@117c130f, org.springframework.security.web.context.SecurityContextHolderFilter@70dc8c9a, org.springframework.security.web.header.HeaderWriterFilter@11f0c940, org.springframework.security.web.authentication.logout.LogoutFilter@1e1df33a, com.bharatshop.shared.filter.JwtAuthenticationFilter@53d808ea, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5f506203, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@487d0a60, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5d659e6a, org.springframework.security.web.session.SessionManagementFilter@61d46b5e, org.springframework.security.web.access.ExceptionTranslationFilter@417ddbd1, org.springframework.security.web.access.intercept.AuthorizationFilter@628fe6aa]
2025-08-29 17:42:43 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Or [Mvc [pattern='/api/storefront/**']] with [org.springframework.security.web.session.DisableEncodeUrlFilter@3b9b3325, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6772f9c7, org.springframework.security.web.context.SecurityContextHolderFilter@722b2b27, org.springframework.security.web.header.HeaderWriterFilter@788577d3, org.springframework.security.web.authentication.logout.LogoutFilter@6d362079, com.bharatshop.shared.filter.SessionAuthenticationFilter@2586e878, org.springframework.security.web.session.ConcurrentSessionFilter@4ac8e2d3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53d5e209, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b7bbcd5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c85cbf7, org.springframework.security.web.session.SessionManagementFilter@4803b5b4, org.springframework.security.web.access.ExceptionTranslationFilter@2550a63c, org.springframework.security.web.access.intercept.AuthorizationFilter@704c98c]
2025-08-29 17:42:43 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5aa0fbd0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@350fc25b, org.springframework.security.web.context.SecurityContextHolderFilter@565eab7e, org.springframework.security.web.header.HeaderWriterFilter@5a2e288d, org.springframework.security.web.authentication.logout.LogoutFilter@47951aad, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@467f21f8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4f727b3d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1963270f, org.springframework.security.web.access.ExceptionTranslationFilter@183236dc, org.springframework.security.web.access.intercept.AuthorizationFilter@24ada4e3]
2025-08-29 17:42:43 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-29 17:42:43 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-29 17:42:44 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-08-29 17:42:44 [main] INFO  c.b.platform.PlatformApplication - Started PlatformApplication in 10.646 seconds (process running for 11.159)
2025-08-29 17:43:08 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-29 17:43:08 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7f0e9ace
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@3cac6165
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-29 17:43:08 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /?ide_webview_request_time=1756469588366
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /?ide_webview_request_time=1756469588366
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/?ide_webview_request_time=1756469588366", parameters={masked}
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .]
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error?ide_webview_request_time=1756469588366
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error?ide_webview_request_time=1756469588366
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error?ide_webview_request_time=1756469588366", parameters={masked}
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-29 17:43:08 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-29 17:44:31 [main] INFO  c.b.platform.PlatformApplication - Starting PlatformApplication using Java 17.0.12 with PID 18536 (C:\Users\Adarsh\Downloads\bharatshop\platform\target\classes started by Adarsh in C:\Users\Adarsh\Downloads\bharatshop\platform)
2025-08-29 17:44:31 [main] DEBUG c.b.platform.PlatformApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-08-29 17:44:31 [main] INFO  c.b.platform.PlatformApplication - The following 1 profile is active: "test"
2025-08-29 17:44:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:44:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 17:44:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 154 ms. Found 13 JPA repository interfaces.
2025-08-29 17:44:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-29 17:44:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-29 17:44:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.PlatformUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:44:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bharatshop.platform.repository.TenantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-29 17:44:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
2025-08-29 17:44:33 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 17:44:33 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 17:44:33 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-08-29 17:44:33 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-29 17:44:33 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2384 ms
2025-08-29 17:44:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 17:44:33 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 17:44:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 17:44:33 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 17:44:34 [main] DEBUG c.b.s.filter.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 17:44:34 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-08-29 17:44:34 [main] DEBUG c.b.s.f.SessionAuthenticationFilter - Filter 'sessionAuthenticationFilter' configured for use
2025-08-29 17:44:34 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 17:44:34 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-08-29 17:44:34 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 17:44:34 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 17:44:34 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 17:44:35 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customer_addresses cascade 
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists pages cascade 
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payment_gateways cascade 
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists payments cascade 
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists plans cascade 
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_user_roles cascade 
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists platform_users cascade 
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_categories cascade 
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists product_images cascade 
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists subscriptions cascade 
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists templates cascade 
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists tenants cascade 
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists vendors cascade 
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        parent_id bigint,
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create table customer_addresses (
        is_active boolean not null,
        is_default boolean not null,
        created_at timestamp(6) not null,
        customer_id bigint not null,
        id bigint generated by default as identity,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        pincode varchar(10) not null,
        phone varchar(15) not null,
        city varchar(100) not null,
        country varchar(100) not null,
        name varchar(100) not null,
        state varchar(100) not null,
        line1 varchar(255) not null,
        line2 varchar(255),
        primary key (id)
    )
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create table pages (
        active boolean not null,
        published boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        status varchar(50),
        author varchar(100),
        slug varchar(100) not null,
        template varchar(100),
        meta_title varchar(200),
        title varchar(200) not null,
        excerpt varchar(500),
        featured_image varchar(500),
        meta_description varchar(500),
        meta_keywords varchar(1000),
        content TEXT,
        custom_css TEXT,
        custom_js TEXT,
        layout JSON,
        page_type varchar(255) not null check (page_type in ('STATIC','DYNAMIC','LANDING','LEGAL')),
        seo JSON,
        template_id varchar(255),
        primary key (id)
    )
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create table payment_gateways (
        is_active boolean not null,
        is_test_mode boolean not null,
        created_at timestamp(6) not null,
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        id uuid not null,
        callback_url varchar(255),
        currency varchar(255) not null,
        gateway_name varchar(255) not null,
        gateway_type varchar(255) not null check (gateway_type in ('RAZORPAY','PAYU','STRIPE','PAYPAL')),
        key_id varchar(255) not null,
        key_secret varchar(255) not null,
        merchant_id varchar(255),
        webhook_secret varchar(255),
        webhook_url varchar(255),
        primary key (id)
    )
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create table payments (
        amount numeric(10,2) not null,
        refund_amount numeric(10,2),
        webhook_verified boolean not null,
        created_at timestamp(6) not null,
        failed_at timestamp(6),
        id bigint generated by default as identity,
        order_id bigint not null,
        paid_at timestamp(6),
        tenant_id bigint not null,
        updated_at timestamp(6) not null,
        payment_gateway_id uuid not null,
        currency varchar(255) not null,
        description varchar(255),
        failure_reason varchar(255),
        gateway_response TEXT,
        method varchar(255) check (method in ('CARD','NETBANKING','WALLET','UPI','EMI','PAYLATER')),
        notes TEXT,
        razorpay_order_id varchar(255) unique,
        razorpay_payment_id varchar(255) unique,
        razorpay_signature varchar(255),
        receipt varchar(255),
        refund_id varchar(255),
        status varchar(255) not null check (status in ('CREATED','AUTHORIZED','CAPTURED','REFUNDED','FAILED','CANCELLED')),
        primary key (id)
    )
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create table plans (
        active boolean not null,
        display_order integer,
        duration_days integer not null,
        is_popular boolean,
        price numeric(10,2) not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        name varchar(100) not null,
        description varchar(500),
        features json,
        primary key (id)
    )
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create table platform_user_roles (
        user_id uuid not null,
        role varchar(255) check (role in ('ADMIN','VENDOR','STAFF'))
    )
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create table platform_users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create table product_categories (
        category_id uuid,
        product_id uuid not null
    )
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create table product_images (
        is_primary boolean,
        sort_order integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        media_id bigint not null,
        updated_at timestamp(6),
        id uuid not null,
        product_id uuid not null,
        tenant_id uuid,
        image_url varchar(500) not null,
        alt_text varchar(255),
        primary key (id)
    )
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create table products (
        price numeric(10,2) not null,
        stock integer not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        attributes JSON,
        description TEXT,
        name varchar(255) not null,
        slug varchar(255) not null unique,
        status varchar(255) not null check (status in ('DRAFT','ACTIVE','INACTIVE','OUT_OF_STOCK','DISCONTINUED')),
        primary key (id)
    )
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create table subscriptions (
        auto_renew boolean,
        cancelled_at timestamp(6),
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        end_date timestamp(6) not null,
        next_billing_date timestamp(6),
        start_date timestamp(6) not null,
        updated_at timestamp(6),
        id uuid not null,
        plan_id uuid not null,
        tenant_id uuid,
        vendor_id uuid not null,
        cancelled_reason varchar(255),
        razorpay_order_id varchar(255),
        razorpay_payment_id varchar(255),
        razorpay_subscription_id varchar(255),
        status varchar(255) not null check (status in ('PENDING','ACTIVE','EXPIRED','CANCELLED','SUSPENDED','TRIAL','PAYMENT_FAILED','RENEWAL_PENDING')),
        primary key (id)
    )
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create table templates (
        is_active boolean not null,
        sort_order integer,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        category varchar(100),
        preview_image varchar(500),
        config JSON,
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create table tenants (
        active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        id uuid not null,
        tenant_id uuid,
        code varchar(50) not null unique,
        name varchar(100) not null unique,
        description varchar(500),
        primary key (id)
    )
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create table vendors (
        is_active boolean not null,
        created_at timestamp(6) not null,
        deleted_at timestamp(6),
        updated_at timestamp(6),
        currency varchar(10),
        preferred_language varchar(10),
        id uuid not null,
        tenant_id uuid,
        logo varchar(500),
        description TEXT,
        domain varchar(255) unique,
        name varchar(255) not null,
        status varchar(255) not null check (status in ('PENDING','ACTIVE','SUSPENDED','INACTIVE')),
        store_name varchar(255) not null,
        subscription_id varchar(255),
        theme_config JSON,
        primary key (id)
    )
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_tenant_id 
       on categories (tenant_id)
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_slug 
       on categories (slug)
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_parent_id 
       on categories (parent_id)
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create index idx_category_sort_order 
       on categories (sort_order)
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer_tenant 
       on customer_addresses (customer_id, tenant_id)
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_tenant 
       on customer_addresses (tenant_id)
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create index idx_address_customer 
       on customer_addresses (customer_id)
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_slug 
       on pages (slug)
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_tenant_slug 
       on pages (tenant_id, slug)
2025-08-29 17:44:35 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_active 
       on pages (active)
2025-08-29 17:44:36 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_published 
       on pages (published)
2025-08-29 17:44:36 [main] DEBUG org.hibernate.SQL - 
    create index idx_page_type 
       on pages (page_type)
2025-08-29 17:44:36 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_tenant_id 
       on products (tenant_id)
2025-08-29 17:44:36 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_slug 
       on products (slug)
2025-08-29 17:44:36 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_status 
       on products (status)
2025-08-29 17:44:36 [main] DEBUG org.hibernate.SQL - 
    create index idx_product_name 
       on products (name)
2025-08-29 17:44:36 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_name 
       on templates (name)
2025-08-29 17:44:36 [main] DEBUG org.hibernate.SQL - 
    create index idx_template_tenant_id 
       on templates (tenant_id)
2025-08-29 17:44:36 [main] DEBUG org.hibernate.SQL - 
    create index idx_tenant_active 
       on tenants (active)
2025-08-29 17:44:36 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_name 
       on vendors (name)
2025-08-29 17:44:36 [main] DEBUG org.hibernate.SQL - 
    create index idx_vendor_store_name 
       on vendors (store_name)
2025-08-29 17:44:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists payments 
       add constraint FKsg72b95wtfmuek6xmpk76en5v 
       foreign key (payment_gateway_id) 
       references payment_gateways
2025-08-29 17:44:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists platform_user_roles 
       add constraint FKpd8qg4xvkj8b97khs1cqmkun4 
       foreign key (user_id) 
       references platform_users
2025-08-29 17:44:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_categories 
       add constraint FKlda9rad6s180ha3dl1ncsp8n7 
       foreign key (product_id) 
       references products
2025-08-29 17:44:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists product_images 
       add constraint FKqnq71xsohugpqwf3c9gxmsuy 
       foreign key (product_id) 
       references products
2025-08-29 17:44:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists subscriptions 
       add constraint FKb1uf5qnxi6uj95se8ykydntl1 
       foreign key (plan_id) 
       references plans
2025-08-29 17:44:36 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 17:44:36 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 17:44:37 [main] INFO  c.b.shared.config.RazorpayConfig - Initializing Razorpay client with key: rzp_test_key
2025-08-29 17:44:38 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-08-29 17:44:39 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-29 17:44:39 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 85 mappings in 'requestMappingHandlerMapping'
2025-08-29 17:44:39 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-08-29 17:44:39 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@117c130f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d659e6a, org.springframework.security.web.context.SecurityContextHolderFilter@66860e08, org.springframework.security.web.header.HeaderWriterFilter@e026cf0, org.springframework.web.filter.CorsFilter@404289da, org.springframework.security.web.authentication.logout.LogoutFilter@49a5c387, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4e10099e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@36ee2e3a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6da648c5, org.springframework.security.web.session.SessionManagementFilter@3bb444a2, org.springframework.security.web.access.ExceptionTranslationFilter@1b74c727, org.springframework.security.web.access.intercept.AuthorizationFilter@487d0a60]
2025-08-29 17:44:39 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Or [Mvc [pattern='/api/platform/**']] with [org.springframework.security.web.session.DisableEncodeUrlFilter@6e9e3321, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1acdbb4e, org.springframework.security.web.context.SecurityContextHolderFilter@379f1d78, org.springframework.security.web.header.HeaderWriterFilter@18d55130, org.springframework.security.web.authentication.logout.LogoutFilter@4eb7521e, com.bharatshop.shared.filter.JwtAuthenticationFilter@57eed461, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@58d7b8d2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ab93e29, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2a2f88c7, org.springframework.security.web.session.SessionManagementFilter@276996f2, org.springframework.security.web.access.ExceptionTranslationFilter@44457c4d, org.springframework.security.web.access.intercept.AuthorizationFilter@8a84905]
2025-08-29 17:44:39 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure Or [Mvc [pattern='/api/storefront/**']] with [org.springframework.security.web.session.DisableEncodeUrlFilter@6df723a7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5b724a76, org.springframework.security.web.context.SecurityContextHolderFilter@1963270f, org.springframework.security.web.header.HeaderWriterFilter@2dec2b42, org.springframework.security.web.authentication.logout.LogoutFilter@460e17b8, com.bharatshop.shared.filter.SessionAuthenticationFilter@54ae1240, org.springframework.security.web.session.ConcurrentSessionFilter@183236dc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5020027c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@d030dd3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2310ad09, org.springframework.security.web.session.SessionManagementFilter@4f8c37c1, org.springframework.security.web.access.ExceptionTranslationFilter@c85cbf7, org.springframework.security.web.access.intercept.AuthorizationFilter@315346c]
2025-08-29 17:44:39 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@16c87aa2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4bcd3286, org.springframework.security.web.context.SecurityContextHolderFilter@2ec23a05, org.springframework.security.web.header.HeaderWriterFilter@51fba518, org.springframework.security.web.authentication.logout.LogoutFilter@260f6aef, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@408a0df, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@15fdcd0e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2d2ece26, org.springframework.security.web.access.ExceptionTranslationFilter@43ea41d9, org.springframework.security.web.access.intercept.AuthorizationFilter@1c2e1cf2]
2025-08-29 17:44:39 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-29 17:44:39 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-29 17:44:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-08-29 17:44:40 [main] INFO  c.b.platform.PlatformApplication - Started PlatformApplication in 9.986 seconds (process running for 10.561)
